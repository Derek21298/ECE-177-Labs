
Lab08.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00000b88  00000c1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b88  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  0080012a  0080012a  00000c46  2**0
                  ALLOC
  3 .stab         00000d20  00000000  00000000  00000c48  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000e25  00000000  00000000  00001968  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000007d  00000000  00000000  0000278d  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000280c  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000038  00000000  00000000  0000284c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00000a36  00000000  00000000  00002884  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000817  00000000  00000000  000032ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000337  00000000  00000000  00003ad1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000000b0  00000000  00000000  00003e08  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000419  00000000  00000000  00003eb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000002f6  00000000  00000000  000042d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000028  00000000  00000000  000045c7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e8 e8       	ldi	r30, 0x88	; 136
  90:	fb e0       	ldi	r31, 0x0B	; 11
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	aa 32       	cpi	r26, 0x2A	; 42
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	aa e2       	ldi	r26, 0x2A	; 42
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a1 33       	cpi	r26, 0x31	; 49
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 21 01 	call	0x242	; 0x242 <main>
  b2:	0c 94 c2 05 	jmp	0xb84	; 0xb84 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <getkey>:
		
		printf("%d -> 0x%X", num, num);
	}		
}

signed char getkey() {
  ba:	0f 93       	push	r16
  bc:	1f 93       	push	r17
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
  c2:	c0 e0       	ldi	r28, 0x00	; 0
  c4:	d0 e0       	ldi	r29, 0x00	; 0
  c6:	a0 e0       	ldi	r26, 0x00	; 0
  c8:	b0 e0       	ldi	r27, 0x00	; 0
	
	int key = -1;
  ca:	8f ef       	ldi	r24, 0xFF	; 255
  cc:	9f ef       	ldi	r25, 0xFF	; 255
	int col = 0;
	int maskRow = 0b00010000;
	int maskCol = 0b00000001;
	
	for(i = 4; i < 8; i++) {
		DDRA = maskRow << (i -4);
  ce:	00 e1       	ldi	r16, 0x10	; 16
  d0:	10 e0       	ldi	r17, 0x00	; 0
		PORTA = maskRow << (i - 4);
		row = (i - 4);
		
		for(j = 0; j < 4; j++) {
			if((PINA & (maskCol << j)) == (maskCol << j)) {
  d2:	e1 e0       	ldi	r30, 0x01	; 1
  d4:	f0 e0       	ldi	r31, 0x00	; 0
	int col = 0;
	int maskRow = 0b00010000;
	int maskCol = 0b00000001;
	
	for(i = 4; i < 8; i++) {
		DDRA = maskRow << (i -4);
  d6:	98 01       	movw	r18, r16
  d8:	0a 2e       	mov	r0, r26
  da:	02 c0       	rjmp	.+4      	; 0xe0 <getkey+0x26>
  dc:	22 0f       	add	r18, r18
  de:	33 1f       	adc	r19, r19
  e0:	0a 94       	dec	r0
  e2:	e2 f7       	brpl	.-8      	; 0xdc <getkey+0x22>
  e4:	21 b9       	out	0x01, r18	; 1
		PORTA = maskRow << (i - 4);
  e6:	22 b9       	out	0x02, r18	; 2
		row = (i - 4);
		
		for(j = 0; j < 4; j++) {
  e8:	60 e0       	ldi	r22, 0x00	; 0
  ea:	70 e0       	ldi	r23, 0x00	; 0
			if((PINA & (maskCol << j)) == (maskCol << j)) {
  ec:	20 b1       	in	r18, 0x00	; 0
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	af 01       	movw	r20, r30
  f2:	06 2e       	mov	r0, r22
  f4:	02 c0       	rjmp	.+4      	; 0xfa <getkey+0x40>
  f6:	44 0f       	add	r20, r20
  f8:	55 1f       	adc	r21, r21
  fa:	0a 94       	dec	r0
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <getkey+0x3c>
  fe:	24 23       	and	r18, r20
 100:	35 23       	and	r19, r21
 102:	42 17       	cp	r20, r18
 104:	53 07       	cpc	r21, r19
 106:	19 f4       	brne	.+6      	; 0x10e <getkey+0x54>
 108:	cb 01       	movw	r24, r22
 10a:	8c 0f       	add	r24, r28
 10c:	9d 1f       	adc	r25, r29
	for(i = 4; i < 8; i++) {
		DDRA = maskRow << (i -4);
		PORTA = maskRow << (i - 4);
		row = (i - 4);
		
		for(j = 0; j < 4; j++) {
 10e:	6f 5f       	subi	r22, 0xFF	; 255
 110:	7f 4f       	sbci	r23, 0xFF	; 255
 112:	64 30       	cpi	r22, 0x04	; 4
 114:	71 05       	cpc	r23, r1
 116:	51 f7       	brne	.-44     	; 0xec <getkey+0x32>
 118:	11 96       	adiw	r26, 0x01	; 1
 11a:	24 96       	adiw	r28, 0x04	; 4
	int row = 0;
	int col = 0;
	int maskRow = 0b00010000;
	int maskCol = 0b00000001;
	
	for(i = 4; i < 8; i++) {
 11c:	a4 30       	cpi	r26, 0x04	; 4
 11e:	b1 05       	cpc	r27, r1
 120:	d1 f6       	brne	.-76     	; 0xd6 <getkey+0x1c>
				key = 4 * row + col;
			}
		}
	}
	return key;
}
 122:	df 91       	pop	r29
 124:	cf 91       	pop	r28
 126:	1f 91       	pop	r17
 128:	0f 91       	pop	r16
 12a:	08 95       	ret

0000012c <mapkey>:

signed char mapkey(signed char key) {
 12c:	cf 93       	push	r28
 12e:	df 93       	push	r29
 130:	cd b7       	in	r28, 0x3d	; 61
 132:	de b7       	in	r29, 0x3e	; 62
 134:	60 97       	sbiw	r28, 0x10	; 16
 136:	0f b6       	in	r0, 0x3f	; 63
 138:	f8 94       	cli
 13a:	de bf       	out	0x3e, r29	; 62
 13c:	0f be       	out	0x3f, r0	; 63
 13e:	cd bf       	out	0x3d, r28	; 61
	
	if((key < 0) || (key > 15)) {
 140:	80 31       	cpi	r24, 0x10	; 16
 142:	98 f4       	brcc	.+38     	; 0x16a <mapkey+0x3e>
		return key = -1;
	}
	
	signed char numkey[16] = {1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 9, 12, '*', 0, '#', 13};
 144:	90 e1       	ldi	r25, 0x10	; 16
 146:	ee e0       	ldi	r30, 0x0E	; 14
 148:	f1 e0       	ldi	r31, 0x01	; 1
 14a:	de 01       	movw	r26, r28
 14c:	11 96       	adiw	r26, 0x01	; 1
 14e:	01 90       	ld	r0, Z+
 150:	0d 92       	st	X+, r0
 152:	9a 95       	dec	r25
 154:	e1 f7       	brne	.-8      	; 0x14e <mapkey+0x22>
	
	key = numkey[key];
 156:	e1 e0       	ldi	r30, 0x01	; 1
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	ec 0f       	add	r30, r28
 15c:	fd 1f       	adc	r31, r29
 15e:	e8 0f       	add	r30, r24
 160:	f1 1d       	adc	r31, r1
 162:	87 fd       	sbrc	r24, 7
 164:	fa 95       	dec	r31
 166:	80 81       	ld	r24, Z
	
	return key;
 168:	01 c0       	rjmp	.+2      	; 0x16c <mapkey+0x40>
}

signed char mapkey(signed char key) {
	
	if((key < 0) || (key > 15)) {
		return key = -1;
 16a:	8f ef       	ldi	r24, 0xFF	; 255
	signed char numkey[16] = {1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 9, 12, '*', 0, '#', 13};
	
	key = numkey[key];
	
	return key;
}
 16c:	60 96       	adiw	r28, 0x10	; 16
 16e:	0f b6       	in	r0, 0x3f	; 63
 170:	f8 94       	cli
 172:	de bf       	out	0x3e, r29	; 62
 174:	0f be       	out	0x3f, r0	; 63
 176:	cd bf       	out	0x3d, r28	; 61
 178:	df 91       	pop	r29
 17a:	cf 91       	pop	r28
 17c:	08 95       	ret

0000017e <getnum>:

signed int getnum() {
 17e:	ef 92       	push	r14
 180:	ff 92       	push	r15
 182:	0f 93       	push	r16
 184:	1f 93       	push	r17
 186:	cf 93       	push	r28
 188:	df 93       	push	r29
	
	int result = 0;
	int count = 0;
 18a:	00 e0       	ldi	r16, 0x00	; 0
 18c:	10 e0       	ldi	r17, 0x00	; 0
	return key;
}

signed int getnum() {
	
	int result = 0;
 18e:	c0 e0       	ldi	r28, 0x00	; 0
 190:	d0 e0       	ldi	r29, 0x00	; 0
		if(mapkey(getkey()) <= 9) {
			result = (result * 10) + mapkey(getkey());
		}
		
		if(mapkey(getkey()) == '*') {
			result /= 10;
 192:	0f 2e       	mov	r0, r31
 194:	fa e0       	ldi	r31, 0x0A	; 10
 196:	ef 2e       	mov	r14, r31
 198:	f1 2c       	mov	r15, r1
 19a:	f0 2d       	mov	r31, r0
	int result = 0;
	int count = 0;
	
	while(1) {
		
		while(getkey() != -1);
 19c:	0e 94 5d 00 	call	0xba	; 0xba <getkey>
 1a0:	8f 3f       	cpi	r24, 0xFF	; 255
 1a2:	e1 f7       	brne	.-8      	; 0x19c <getnum+0x1e>
		while(getkey() == -1);
 1a4:	0e 94 5d 00 	call	0xba	; 0xba <getkey>
 1a8:	8f 3f       	cpi	r24, 0xFF	; 255
 1aa:	e1 f3       	breq	.-8      	; 0x1a4 <getnum+0x26>
		
		if(mapkey(getkey()) == '#') {
 1ac:	0e 94 5d 00 	call	0xba	; 0xba <getkey>
 1b0:	0e 94 96 00 	call	0x12c	; 0x12c <mapkey>
 1b4:	83 32       	cpi	r24, 0x23	; 35
 1b6:	69 f1       	breq	.+90     	; 0x212 <getnum+0x94>
			break;
		}
		
		if(mapkey(getkey()) <= 9) {
 1b8:	0e 94 5d 00 	call	0xba	; 0xba <getkey>
 1bc:	0e 94 96 00 	call	0x12c	; 0x12c <mapkey>
 1c0:	8a 30       	cpi	r24, 0x0A	; 10
 1c2:	9c f4       	brge	.+38     	; 0x1ea <getnum+0x6c>
			result = (result * 10) + mapkey(getkey());
 1c4:	ce 01       	movw	r24, r28
 1c6:	88 0f       	add	r24, r24
 1c8:	99 1f       	adc	r25, r25
 1ca:	cc 0f       	add	r28, r28
 1cc:	dd 1f       	adc	r29, r29
 1ce:	cc 0f       	add	r28, r28
 1d0:	dd 1f       	adc	r29, r29
 1d2:	cc 0f       	add	r28, r28
 1d4:	dd 1f       	adc	r29, r29
 1d6:	c8 0f       	add	r28, r24
 1d8:	d9 1f       	adc	r29, r25
 1da:	0e 94 5d 00 	call	0xba	; 0xba <getkey>
 1de:	0e 94 96 00 	call	0x12c	; 0x12c <mapkey>
 1e2:	c8 0f       	add	r28, r24
 1e4:	d1 1d       	adc	r29, r1
 1e6:	87 fd       	sbrc	r24, 7
 1e8:	da 95       	dec	r29
		}
		
		if(mapkey(getkey()) == '*') {
 1ea:	0e 94 5d 00 	call	0xba	; 0xba <getkey>
 1ee:	0e 94 96 00 	call	0x12c	; 0x12c <mapkey>
 1f2:	8a 32       	cpi	r24, 0x2A	; 42
 1f4:	29 f4       	brne	.+10     	; 0x200 <getnum+0x82>
			result /= 10;
 1f6:	ce 01       	movw	r24, r28
 1f8:	b7 01       	movw	r22, r14
 1fa:	0e 94 bc 02 	call	0x578	; 0x578 <__divmodhi4>
 1fe:	eb 01       	movw	r28, r22
		}
		if(mapkey(getkey()) == 10){
 200:	0e 94 5d 00 	call	0xba	; 0xba <getkey>
 204:	0e 94 96 00 	call	0x12c	; 0x12c <mapkey>
 208:	8a 30       	cpi	r24, 0x0A	; 10
 20a:	41 f6       	brne	.-112    	; 0x19c <getnum+0x1e>
			count++;
 20c:	0f 5f       	subi	r16, 0xFF	; 255
 20e:	1f 4f       	sbci	r17, 0xFF	; 255
 210:	c5 cf       	rjmp	.-118    	; 0x19c <getnum+0x1e>
		}
	}
	if((count % 2) == 1){
 212:	01 70       	andi	r16, 0x01	; 1
 214:	10 78       	andi	r17, 0x80	; 128
 216:	11 23       	and	r17, r17
 218:	34 f4       	brge	.+12     	; 0x226 <getnum+0xa8>
 21a:	01 50       	subi	r16, 0x01	; 1
 21c:	11 09       	sbc	r17, r1
 21e:	0e 6f       	ori	r16, 0xFE	; 254
 220:	1f 6f       	ori	r17, 0xFF	; 255
 222:	0f 5f       	subi	r16, 0xFF	; 255
 224:	1f 4f       	sbci	r17, 0xFF	; 255
 226:	01 30       	cpi	r16, 0x01	; 1
 228:	11 05       	cpc	r17, r1
 22a:	19 f4       	brne	.+6      	; 0x232 <getnum+0xb4>
		result *= -1;
 22c:	d1 95       	neg	r29
 22e:	c1 95       	neg	r28
 230:	d1 09       	sbc	r29, r1
	}
	
	return result;
}
 232:	ce 01       	movw	r24, r28
 234:	df 91       	pop	r29
 236:	cf 91       	pop	r28
 238:	1f 91       	pop	r17
 23a:	0f 91       	pop	r16
 23c:	ff 90       	pop	r15
 23e:	ef 90       	pop	r14
 240:	08 95       	ret

00000242 <main>:

int main(void){
	
	int num = 0;

    DDRA = 0xF0;
 242:	80 ef       	ldi	r24, 0xF0	; 240
 244:	81 b9       	out	0x01, r24	; 1
	
	lcd_init();		
 246:	0e 94 cc 01 	call	0x398	; 0x398 <lcd_init>
	stdout=&lcd_stdout;
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	91 e0       	ldi	r25, 0x01	; 1
 24e:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <__iob+0x3>
 252:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <__iob+0x2>
    while (1) {
		
		num = getnum();
		lcd_iwrite(LCD_CLR);
		
		printf("%d -> 0x%X", num, num);
 256:	0e e1       	ldi	r16, 0x1E	; 30
 258:	11 e0       	ldi	r17, 0x01	; 1
	stdout=&lcd_stdout;
	
	
    while (1) {
		
		num = getnum();
 25a:	0e 94 bf 00 	call	0x17e	; 0x17e <getnum>
 25e:	c8 2f       	mov	r28, r24
 260:	d9 2f       	mov	r29, r25
		lcd_iwrite(LCD_CLR);
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
		
		printf("%d -> 0x%X", num, num);
 268:	df 93       	push	r29
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	cf 93       	push	r28
 270:	1f 93       	push	r17
 272:	0f 93       	push	r16
 274:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <printf>
 278:	0f 90       	pop	r0
 27a:	0f 90       	pop	r0
 27c:	0f 90       	pop	r0
 27e:	0f 90       	pop	r0
 280:	0f 90       	pop	r0
 282:	0f 90       	pop	r0
 284:	ea cf       	rjmp	.-44     	; 0x25a <main+0x18>

00000286 <lcd_clk>:
 286:	47 9a       	sbi	0x08, 7	; 8
 288:	85 e0       	ldi	r24, 0x05	; 5
 28a:	8a 95       	dec	r24
 28c:	f1 f7       	brne	.-4      	; 0x28a <lcd_clk+0x4>
 28e:	00 00       	nop
 290:	47 98       	cbi	0x08, 7	; 8
 292:	85 e0       	ldi	r24, 0x05	; 5
 294:	8a 95       	dec	r24
 296:	f1 f7       	brne	.-4      	; 0x294 <lcd_clk+0xe>
 298:	00 00       	nop
 29a:	08 95       	ret

0000029c <lcd_busy_wait>:
 29c:	84 b1       	in	r24, 0x04	; 4
 29e:	80 7f       	andi	r24, 0xF0	; 240
 2a0:	84 b9       	out	0x04, r24	; 4
 2a2:	95 b1       	in	r25, 0x05	; 5
 2a4:	29 2f       	mov	r18, r25
 2a6:	20 71       	andi	r18, 0x10	; 16
 2a8:	2c 98       	cbi	0x05, 4	; 5
 2aa:	46 9a       	sbi	0x08, 6	; 8
 2ac:	47 9a       	sbi	0x08, 7	; 8
 2ae:	85 e0       	ldi	r24, 0x05	; 5
 2b0:	8a 95       	dec	r24
 2b2:	f1 f7       	brne	.-4      	; 0x2b0 <lcd_busy_wait+0x14>
 2b4:	00 00       	nop
 2b6:	93 b1       	in	r25, 0x03	; 3
 2b8:	47 98       	cbi	0x08, 7	; 8
 2ba:	85 e0       	ldi	r24, 0x05	; 5
 2bc:	8a 95       	dec	r24
 2be:	f1 f7       	brne	.-4      	; 0x2bc <lcd_busy_wait+0x20>
 2c0:	00 00       	nop
 2c2:	47 9a       	sbi	0x08, 7	; 8
 2c4:	85 e0       	ldi	r24, 0x05	; 5
 2c6:	8a 95       	dec	r24
 2c8:	f1 f7       	brne	.-4      	; 0x2c6 <lcd_busy_wait+0x2a>
 2ca:	00 00       	nop
 2cc:	83 b1       	in	r24, 0x03	; 3
 2ce:	92 95       	swap	r25
 2d0:	90 7f       	andi	r25, 0xF0	; 240
 2d2:	8f 70       	andi	r24, 0x0F	; 15
 2d4:	89 2b       	or	r24, r25
 2d6:	47 98       	cbi	0x08, 7	; 8
 2d8:	95 e0       	ldi	r25, 0x05	; 5
 2da:	9a 95       	dec	r25
 2dc:	f1 f7       	brne	.-4      	; 0x2da <lcd_busy_wait+0x3e>
 2de:	00 00       	nop
 2e0:	87 fd       	sbrc	r24, 7
 2e2:	e4 cf       	rjmp	.-56     	; 0x2ac <lcd_busy_wait+0x10>
 2e4:	46 98       	cbi	0x08, 6	; 8
 2e6:	95 b1       	in	r25, 0x05	; 5
 2e8:	9f 7e       	andi	r25, 0xEF	; 239
 2ea:	92 2b       	or	r25, r18
 2ec:	95 b9       	out	0x05, r25	; 5
 2ee:	94 b1       	in	r25, 0x04	; 4
 2f0:	9f 60       	ori	r25, 0x0F	; 15
 2f2:	94 b9       	out	0x04, r25	; 4
 2f4:	08 95       	ret

000002f6 <lcd_dread>:
 2f6:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_busy_wait>
 2fa:	84 b1       	in	r24, 0x04	; 4
 2fc:	80 7f       	andi	r24, 0xF0	; 240
 2fe:	84 b9       	out	0x04, r24	; 4
 300:	46 9a       	sbi	0x08, 6	; 8
 302:	47 9a       	sbi	0x08, 7	; 8
 304:	85 e0       	ldi	r24, 0x05	; 5
 306:	8a 95       	dec	r24
 308:	f1 f7       	brne	.-4      	; 0x306 <lcd_dread+0x10>
 30a:	00 00       	nop
 30c:	23 b1       	in	r18, 0x03	; 3
 30e:	47 98       	cbi	0x08, 7	; 8
 310:	85 e0       	ldi	r24, 0x05	; 5
 312:	8a 95       	dec	r24
 314:	f1 f7       	brne	.-4      	; 0x312 <lcd_dread+0x1c>
 316:	00 00       	nop
 318:	47 9a       	sbi	0x08, 7	; 8
 31a:	85 e0       	ldi	r24, 0x05	; 5
 31c:	8a 95       	dec	r24
 31e:	f1 f7       	brne	.-4      	; 0x31c <lcd_dread+0x26>
 320:	00 00       	nop
 322:	93 b1       	in	r25, 0x03	; 3
 324:	22 95       	swap	r18
 326:	20 7f       	andi	r18, 0xF0	; 240
 328:	89 2f       	mov	r24, r25
 32a:	8f 70       	andi	r24, 0x0F	; 15
 32c:	47 98       	cbi	0x08, 7	; 8
 32e:	46 98       	cbi	0x08, 6	; 8
 330:	94 b1       	in	r25, 0x04	; 4
 332:	9f 60       	ori	r25, 0x0F	; 15
 334:	94 b9       	out	0x04, r25	; 4
 336:	82 2b       	or	r24, r18
 338:	08 95       	ret

0000033a <lcd_dwrite>:
 33a:	cf 93       	push	r28
 33c:	c8 2f       	mov	r28, r24
 33e:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_busy_wait>
 342:	95 b1       	in	r25, 0x05	; 5
 344:	8c 2f       	mov	r24, r28
 346:	82 95       	swap	r24
 348:	8f 70       	andi	r24, 0x0F	; 15
 34a:	90 7f       	andi	r25, 0xF0	; 240
 34c:	98 2b       	or	r25, r24
 34e:	95 b9       	out	0x05, r25	; 5
 350:	0e 94 43 01 	call	0x286	; 0x286 <lcd_clk>
 354:	95 b1       	in	r25, 0x05	; 5
 356:	8c 2f       	mov	r24, r28
 358:	8f 70       	andi	r24, 0x0F	; 15
 35a:	90 7f       	andi	r25, 0xF0	; 240
 35c:	89 2b       	or	r24, r25
 35e:	85 b9       	out	0x05, r24	; 5
 360:	cf 91       	pop	r28
 362:	0c 94 43 01 	jmp	0x286	; 0x286 <lcd_clk>

00000366 <lcd_iwrite>:
 366:	cf 93       	push	r28
 368:	c8 2f       	mov	r28, r24
 36a:	2c 98       	cbi	0x05, 4	; 5
 36c:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_busy_wait>
 370:	95 b1       	in	r25, 0x05	; 5
 372:	8c 2f       	mov	r24, r28
 374:	82 95       	swap	r24
 376:	8f 70       	andi	r24, 0x0F	; 15
 378:	90 7f       	andi	r25, 0xF0	; 240
 37a:	98 2b       	or	r25, r24
 37c:	95 b9       	out	0x05, r25	; 5
 37e:	0e 94 43 01 	call	0x286	; 0x286 <lcd_clk>
 382:	95 b1       	in	r25, 0x05	; 5
 384:	8c 2f       	mov	r24, r28
 386:	8f 70       	andi	r24, 0x0F	; 15
 388:	90 7f       	andi	r25, 0xF0	; 240
 38a:	89 2b       	or	r24, r25
 38c:	85 b9       	out	0x05, r24	; 5
 38e:	0e 94 43 01 	call	0x286	; 0x286 <lcd_clk>
 392:	2c 9a       	sbi	0x05, 4	; 5
 394:	cf 91       	pop	r28
 396:	08 95       	ret

00000398 <lcd_init>:
 398:	85 b1       	in	r24, 0x05	; 5
 39a:	80 7e       	andi	r24, 0xE0	; 224
 39c:	85 b9       	out	0x05, r24	; 5
 39e:	2c 98       	cbi	0x05, 4	; 5
 3a0:	46 98       	cbi	0x08, 6	; 8
 3a2:	47 98       	cbi	0x08, 7	; 8
 3a4:	84 b1       	in	r24, 0x04	; 4
 3a6:	8f 61       	ori	r24, 0x1F	; 31
 3a8:	84 b9       	out	0x04, r24	; 4
 3aa:	87 b1       	in	r24, 0x07	; 7
 3ac:	80 6c       	ori	r24, 0xC0	; 192
 3ae:	87 b9       	out	0x07, r24	; 7
 3b0:	8f e5       	ldi	r24, 0x5F	; 95
 3b2:	9a ee       	ldi	r25, 0xEA	; 234
 3b4:	01 97       	sbiw	r24, 0x01	; 1
 3b6:	f1 f7       	brne	.-4      	; 0x3b4 <lcd_init+0x1c>
 3b8:	00 c0       	rjmp	.+0      	; 0x3ba <lcd_init+0x22>
 3ba:	00 00       	nop
 3bc:	85 b1       	in	r24, 0x05	; 5
 3be:	80 7f       	andi	r24, 0xF0	; 240
 3c0:	83 60       	ori	r24, 0x03	; 3
 3c2:	85 b9       	out	0x05, r24	; 5
 3c4:	0e 94 43 01 	call	0x286	; 0x286 <lcd_clk>
 3c8:	87 e0       	ldi	r24, 0x07	; 7
 3ca:	90 e2       	ldi	r25, 0x20	; 32
 3cc:	01 97       	sbiw	r24, 0x01	; 1
 3ce:	f1 f7       	brne	.-4      	; 0x3cc <lcd_init+0x34>
 3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <lcd_init+0x3a>
 3d2:	00 00       	nop
 3d4:	85 b1       	in	r24, 0x05	; 5
 3d6:	80 7f       	andi	r24, 0xF0	; 240
 3d8:	83 60       	ori	r24, 0x03	; 3
 3da:	85 b9       	out	0x05, r24	; 5
 3dc:	0e 94 43 01 	call	0x286	; 0x286 <lcd_clk>
 3e0:	87 ec       	ldi	r24, 0xC7	; 199
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	01 97       	sbiw	r24, 0x01	; 1
 3e6:	f1 f7       	brne	.-4      	; 0x3e4 <lcd_init+0x4c>
 3e8:	00 c0       	rjmp	.+0      	; 0x3ea <lcd_init+0x52>
 3ea:	00 00       	nop
 3ec:	85 b1       	in	r24, 0x05	; 5
 3ee:	80 7f       	andi	r24, 0xF0	; 240
 3f0:	83 60       	ori	r24, 0x03	; 3
 3f2:	85 b9       	out	0x05, r24	; 5
 3f4:	0e 94 43 01 	call	0x286	; 0x286 <lcd_clk>
 3f8:	0e 94 4e 01 	call	0x29c	; 0x29c <lcd_busy_wait>
 3fc:	85 b1       	in	r24, 0x05	; 5
 3fe:	80 7f       	andi	r24, 0xF0	; 240
 400:	82 60       	ori	r24, 0x02	; 2
 402:	85 b9       	out	0x05, r24	; 5
 404:	0e 94 43 01 	call	0x286	; 0x286 <lcd_clk>
 408:	84 e2       	ldi	r24, 0x24	; 36
 40a:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 40e:	8c e2       	ldi	r24, 0x2C	; 44
 410:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 414:	88 e0       	ldi	r24, 0x08	; 8
 416:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 420:	86 e0       	ldi	r24, 0x06	; 6
 422:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 426:	8f e0       	ldi	r24, 0x0F	; 15
 428:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 42c:	80 ed       	ldi	r24, 0xD0	; 208
 42e:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 432:	2c 9a       	sbi	0x05, 4	; 5
 434:	08 95       	ret

00000436 <lcd_putc>:
 436:	3f 92       	push	r3
 438:	4f 92       	push	r4
 43a:	5f 92       	push	r5
 43c:	6f 92       	push	r6
 43e:	7f 92       	push	r7
 440:	8f 92       	push	r8
 442:	9f 92       	push	r9
 444:	af 92       	push	r10
 446:	bf 92       	push	r11
 448:	cf 92       	push	r12
 44a:	df 92       	push	r13
 44c:	ef 92       	push	r14
 44e:	ff 92       	push	r15
 450:	0f 93       	push	r16
 452:	1f 93       	push	r17
 454:	cf 93       	push	r28
 456:	df 93       	push	r29
 458:	cd b7       	in	r28, 0x3d	; 61
 45a:	de b7       	in	r29, 0x3e	; 62
 45c:	e0 97       	sbiw	r28, 0x30	; 48
 45e:	0f b6       	in	r0, 0x3f	; 63
 460:	f8 94       	cli
 462:	de bf       	out	0x3e, r29	; 62
 464:	0f be       	out	0x3f, r0	; 63
 466:	cd bf       	out	0x3d, r28	; 61
 468:	8a 30       	cpi	r24, 0x0A	; 10
 46a:	09 f4       	brne	.+2      	; 0x46e <lcd_putc+0x38>
 46c:	81 c0       	rjmp	.+258    	; 0x570 <lcd_putc+0x13a>
 46e:	38 2e       	mov	r3, r24
 470:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
 474:	81 11       	cpse	r24, r1
 476:	1d c0       	rjmp	.+58     	; 0x4b2 <lcd_putc+0x7c>
 478:	83 2d       	mov	r24, r3
 47a:	0e 94 9d 01 	call	0x33a	; 0x33a <lcd_dwrite>
 47e:	81 e0       	ldi	r24, 0x01	; 1
 480:	90 e0       	ldi	r25, 0x00	; 0
 482:	e0 96       	adiw	r28, 0x30	; 48
 484:	0f b6       	in	r0, 0x3f	; 63
 486:	f8 94       	cli
 488:	de bf       	out	0x3e, r29	; 62
 48a:	0f be       	out	0x3f, r0	; 63
 48c:	cd bf       	out	0x3d, r28	; 61
 48e:	df 91       	pop	r29
 490:	cf 91       	pop	r28
 492:	1f 91       	pop	r17
 494:	0f 91       	pop	r16
 496:	ff 90       	pop	r15
 498:	ef 90       	pop	r14
 49a:	df 90       	pop	r13
 49c:	cf 90       	pop	r12
 49e:	bf 90       	pop	r11
 4a0:	af 90       	pop	r10
 4a2:	9f 90       	pop	r9
 4a4:	8f 90       	pop	r8
 4a6:	7f 90       	pop	r7
 4a8:	6f 90       	pop	r6
 4aa:	5f 90       	pop	r5
 4ac:	4f 90       	pop	r4
 4ae:	3f 90       	pop	r3
 4b0:	08 95       	ret
 4b2:	80 ec       	ldi	r24, 0xC0	; 192
 4b4:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 4b8:	8e 01       	movw	r16, r28
 4ba:	0f 5f       	subi	r16, 0xFF	; 255
 4bc:	1f 4f       	sbci	r17, 0xFF	; 255
 4be:	4e 01       	movw	r8, r28
 4c0:	81 e1       	ldi	r24, 0x11	; 17
 4c2:	88 0e       	add	r8, r24
 4c4:	91 1c       	adc	r9, r1
 4c6:	78 01       	movw	r14, r16
 4c8:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <lcd_dread>
 4cc:	f7 01       	movw	r30, r14
 4ce:	81 93       	st	Z+, r24
 4d0:	7f 01       	movw	r14, r30
 4d2:	e8 15       	cp	r30, r8
 4d4:	f9 05       	cpc	r31, r9
 4d6:	c1 f7       	brne	.-16     	; 0x4c8 <lcd_putc+0x92>
 4d8:	80 e9       	ldi	r24, 0x90	; 144
 4da:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 4de:	64 01       	movw	r12, r8
 4e0:	5e 01       	movw	r10, r28
 4e2:	f1 e2       	ldi	r31, 0x21	; 33
 4e4:	af 0e       	add	r10, r31
 4e6:	b1 1c       	adc	r11, r1
 4e8:	74 01       	movw	r14, r8
 4ea:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <lcd_dread>
 4ee:	f7 01       	movw	r30, r14
 4f0:	81 93       	st	Z+, r24
 4f2:	7f 01       	movw	r14, r30
 4f4:	ea 15       	cp	r30, r10
 4f6:	fb 05       	cpc	r31, r11
 4f8:	c1 f7       	brne	.-16     	; 0x4ea <lcd_putc+0xb4>
 4fa:	80 ed       	ldi	r24, 0xD0	; 208
 4fc:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 500:	75 01       	movw	r14, r10
 502:	3e 01       	movw	r6, r28
 504:	f1 e3       	ldi	r31, 0x31	; 49
 506:	6f 0e       	add	r6, r31
 508:	71 1c       	adc	r7, r1
 50a:	25 01       	movw	r4, r10
 50c:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <lcd_dread>
 510:	f2 01       	movw	r30, r4
 512:	81 93       	st	Z+, r24
 514:	2f 01       	movw	r4, r30
 516:	e6 15       	cp	r30, r6
 518:	f7 05       	cpc	r31, r7
 51a:	c1 f7       	brne	.-16     	; 0x50c <lcd_putc+0xd6>
 51c:	81 e0       	ldi	r24, 0x01	; 1
 51e:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 522:	80 e8       	ldi	r24, 0x80	; 128
 524:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 528:	f8 01       	movw	r30, r16
 52a:	81 91       	ld	r24, Z+
 52c:	8f 01       	movw	r16, r30
 52e:	0e 94 9d 01 	call	0x33a	; 0x33a <lcd_dwrite>
 532:	80 16       	cp	r8, r16
 534:	91 06       	cpc	r9, r17
 536:	c1 f7       	brne	.-16     	; 0x528 <lcd_putc+0xf2>
 538:	80 ec       	ldi	r24, 0xC0	; 192
 53a:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 53e:	f6 01       	movw	r30, r12
 540:	81 91       	ld	r24, Z+
 542:	6f 01       	movw	r12, r30
 544:	0e 94 9d 01 	call	0x33a	; 0x33a <lcd_dwrite>
 548:	ac 14       	cp	r10, r12
 54a:	bd 04       	cpc	r11, r13
 54c:	c1 f7       	brne	.-16     	; 0x53e <lcd_putc+0x108>
 54e:	80 e9       	ldi	r24, 0x90	; 144
 550:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 554:	f7 01       	movw	r30, r14
 556:	81 91       	ld	r24, Z+
 558:	7f 01       	movw	r14, r30
 55a:	0e 94 9d 01 	call	0x33a	; 0x33a <lcd_dwrite>
 55e:	6e 14       	cp	r6, r14
 560:	7f 04       	cpc	r7, r15
 562:	c1 f7       	brne	.-16     	; 0x554 <lcd_putc+0x11e>
 564:	80 ed       	ldi	r24, 0xD0	; 208
 566:	0e 94 b3 01 	call	0x366	; 0x366 <lcd_iwrite>
 56a:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__data_end>
 56e:	84 cf       	rjmp	.-248    	; 0x478 <lcd_putc+0x42>
 570:	81 e0       	ldi	r24, 0x01	; 1
 572:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
 576:	83 cf       	rjmp	.-250    	; 0x47e <lcd_putc+0x48>

00000578 <__divmodhi4>:
 578:	97 fb       	bst	r25, 7
 57a:	07 2e       	mov	r0, r23
 57c:	16 f4       	brtc	.+4      	; 0x582 <__divmodhi4+0xa>
 57e:	00 94       	com	r0
 580:	07 d0       	rcall	.+14     	; 0x590 <__divmodhi4_neg1>
 582:	77 fd       	sbrc	r23, 7
 584:	09 d0       	rcall	.+18     	; 0x598 <__divmodhi4_neg2>
 586:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__udivmodhi4>
 58a:	07 fc       	sbrc	r0, 7
 58c:	05 d0       	rcall	.+10     	; 0x598 <__divmodhi4_neg2>
 58e:	3e f4       	brtc	.+14     	; 0x59e <__divmodhi4_exit>

00000590 <__divmodhi4_neg1>:
 590:	90 95       	com	r25
 592:	81 95       	neg	r24
 594:	9f 4f       	sbci	r25, 0xFF	; 255
 596:	08 95       	ret

00000598 <__divmodhi4_neg2>:
 598:	70 95       	com	r23
 59a:	61 95       	neg	r22
 59c:	7f 4f       	sbci	r23, 0xFF	; 255

0000059e <__divmodhi4_exit>:
 59e:	08 95       	ret

000005a0 <__udivmodhi4>:
 5a0:	aa 1b       	sub	r26, r26
 5a2:	bb 1b       	sub	r27, r27
 5a4:	51 e1       	ldi	r21, 0x11	; 17
 5a6:	07 c0       	rjmp	.+14     	; 0x5b6 <__udivmodhi4_ep>

000005a8 <__udivmodhi4_loop>:
 5a8:	aa 1f       	adc	r26, r26
 5aa:	bb 1f       	adc	r27, r27
 5ac:	a6 17       	cp	r26, r22
 5ae:	b7 07       	cpc	r27, r23
 5b0:	10 f0       	brcs	.+4      	; 0x5b6 <__udivmodhi4_ep>
 5b2:	a6 1b       	sub	r26, r22
 5b4:	b7 0b       	sbc	r27, r23

000005b6 <__udivmodhi4_ep>:
 5b6:	88 1f       	adc	r24, r24
 5b8:	99 1f       	adc	r25, r25
 5ba:	5a 95       	dec	r21
 5bc:	a9 f7       	brne	.-22     	; 0x5a8 <__udivmodhi4_loop>
 5be:	80 95       	com	r24
 5c0:	90 95       	com	r25
 5c2:	bc 01       	movw	r22, r24
 5c4:	cd 01       	movw	r24, r26
 5c6:	08 95       	ret

000005c8 <printf>:
 5c8:	a0 e0       	ldi	r26, 0x00	; 0
 5ca:	b0 e0       	ldi	r27, 0x00	; 0
 5cc:	ea ee       	ldi	r30, 0xEA	; 234
 5ce:	f2 e0       	ldi	r31, 0x02	; 2
 5d0:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__prologue_saves__+0x20>
 5d4:	ae 01       	movw	r20, r28
 5d6:	4b 5f       	subi	r20, 0xFB	; 251
 5d8:	5f 4f       	sbci	r21, 0xFF	; 255
 5da:	fa 01       	movw	r30, r20
 5dc:	61 91       	ld	r22, Z+
 5de:	71 91       	ld	r23, Z+
 5e0:	af 01       	movw	r20, r30
 5e2:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <__iob+0x2>
 5e6:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <__iob+0x3>
 5ea:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <vfprintf>
 5ee:	e2 e0       	ldi	r30, 0x02	; 2
 5f0:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__epilogue_restores__+0x20>

000005f4 <vfprintf>:
 5f4:	ab e0       	ldi	r26, 0x0B	; 11
 5f6:	b0 e0       	ldi	r27, 0x00	; 0
 5f8:	e0 e0       	ldi	r30, 0x00	; 0
 5fa:	f3 e0       	ldi	r31, 0x03	; 3
 5fc:	0c 94 8b 05 	jmp	0xb16	; 0xb16 <__prologue_saves__>
 600:	6c 01       	movw	r12, r24
 602:	7b 01       	movw	r14, r22
 604:	8a 01       	movw	r16, r20
 606:	fc 01       	movw	r30, r24
 608:	17 82       	std	Z+7, r1	; 0x07
 60a:	16 82       	std	Z+6, r1	; 0x06
 60c:	83 81       	ldd	r24, Z+3	; 0x03
 60e:	81 ff       	sbrs	r24, 1
 610:	cc c1       	rjmp	.+920    	; 0x9aa <__stack+0xab>
 612:	ce 01       	movw	r24, r28
 614:	01 96       	adiw	r24, 0x01	; 1
 616:	3c 01       	movw	r6, r24
 618:	f6 01       	movw	r30, r12
 61a:	93 81       	ldd	r25, Z+3	; 0x03
 61c:	f7 01       	movw	r30, r14
 61e:	93 fd       	sbrc	r25, 3
 620:	85 91       	lpm	r24, Z+
 622:	93 ff       	sbrs	r25, 3
 624:	81 91       	ld	r24, Z+
 626:	7f 01       	movw	r14, r30
 628:	88 23       	and	r24, r24
 62a:	09 f4       	brne	.+2      	; 0x62e <vfprintf+0x3a>
 62c:	ba c1       	rjmp	.+884    	; 0x9a2 <__stack+0xa3>
 62e:	85 32       	cpi	r24, 0x25	; 37
 630:	39 f4       	brne	.+14     	; 0x640 <vfprintf+0x4c>
 632:	93 fd       	sbrc	r25, 3
 634:	85 91       	lpm	r24, Z+
 636:	93 ff       	sbrs	r25, 3
 638:	81 91       	ld	r24, Z+
 63a:	7f 01       	movw	r14, r30
 63c:	85 32       	cpi	r24, 0x25	; 37
 63e:	29 f4       	brne	.+10     	; 0x64a <vfprintf+0x56>
 640:	b6 01       	movw	r22, r12
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 648:	e7 cf       	rjmp	.-50     	; 0x618 <vfprintf+0x24>
 64a:	91 2c       	mov	r9, r1
 64c:	21 2c       	mov	r2, r1
 64e:	31 2c       	mov	r3, r1
 650:	ff e1       	ldi	r31, 0x1F	; 31
 652:	f3 15       	cp	r31, r3
 654:	d8 f0       	brcs	.+54     	; 0x68c <vfprintf+0x98>
 656:	8b 32       	cpi	r24, 0x2B	; 43
 658:	79 f0       	breq	.+30     	; 0x678 <vfprintf+0x84>
 65a:	38 f4       	brcc	.+14     	; 0x66a <vfprintf+0x76>
 65c:	80 32       	cpi	r24, 0x20	; 32
 65e:	79 f0       	breq	.+30     	; 0x67e <vfprintf+0x8a>
 660:	83 32       	cpi	r24, 0x23	; 35
 662:	a1 f4       	brne	.+40     	; 0x68c <vfprintf+0x98>
 664:	23 2d       	mov	r18, r3
 666:	20 61       	ori	r18, 0x10	; 16
 668:	1d c0       	rjmp	.+58     	; 0x6a4 <vfprintf+0xb0>
 66a:	8d 32       	cpi	r24, 0x2D	; 45
 66c:	61 f0       	breq	.+24     	; 0x686 <vfprintf+0x92>
 66e:	80 33       	cpi	r24, 0x30	; 48
 670:	69 f4       	brne	.+26     	; 0x68c <vfprintf+0x98>
 672:	23 2d       	mov	r18, r3
 674:	21 60       	ori	r18, 0x01	; 1
 676:	16 c0       	rjmp	.+44     	; 0x6a4 <vfprintf+0xb0>
 678:	83 2d       	mov	r24, r3
 67a:	82 60       	ori	r24, 0x02	; 2
 67c:	38 2e       	mov	r3, r24
 67e:	e3 2d       	mov	r30, r3
 680:	e4 60       	ori	r30, 0x04	; 4
 682:	3e 2e       	mov	r3, r30
 684:	2a c0       	rjmp	.+84     	; 0x6da <vfprintf+0xe6>
 686:	f3 2d       	mov	r31, r3
 688:	f8 60       	ori	r31, 0x08	; 8
 68a:	1d c0       	rjmp	.+58     	; 0x6c6 <vfprintf+0xd2>
 68c:	37 fc       	sbrc	r3, 7
 68e:	2d c0       	rjmp	.+90     	; 0x6ea <vfprintf+0xf6>
 690:	20 ed       	ldi	r18, 0xD0	; 208
 692:	28 0f       	add	r18, r24
 694:	2a 30       	cpi	r18, 0x0A	; 10
 696:	40 f0       	brcs	.+16     	; 0x6a8 <vfprintf+0xb4>
 698:	8e 32       	cpi	r24, 0x2E	; 46
 69a:	b9 f4       	brne	.+46     	; 0x6ca <vfprintf+0xd6>
 69c:	36 fc       	sbrc	r3, 6
 69e:	81 c1       	rjmp	.+770    	; 0x9a2 <__stack+0xa3>
 6a0:	23 2d       	mov	r18, r3
 6a2:	20 64       	ori	r18, 0x40	; 64
 6a4:	32 2e       	mov	r3, r18
 6a6:	19 c0       	rjmp	.+50     	; 0x6da <vfprintf+0xe6>
 6a8:	36 fe       	sbrs	r3, 6
 6aa:	06 c0       	rjmp	.+12     	; 0x6b8 <vfprintf+0xc4>
 6ac:	8a e0       	ldi	r24, 0x0A	; 10
 6ae:	98 9e       	mul	r9, r24
 6b0:	20 0d       	add	r18, r0
 6b2:	11 24       	eor	r1, r1
 6b4:	92 2e       	mov	r9, r18
 6b6:	11 c0       	rjmp	.+34     	; 0x6da <vfprintf+0xe6>
 6b8:	ea e0       	ldi	r30, 0x0A	; 10
 6ba:	2e 9e       	mul	r2, r30
 6bc:	20 0d       	add	r18, r0
 6be:	11 24       	eor	r1, r1
 6c0:	22 2e       	mov	r2, r18
 6c2:	f3 2d       	mov	r31, r3
 6c4:	f0 62       	ori	r31, 0x20	; 32
 6c6:	3f 2e       	mov	r3, r31
 6c8:	08 c0       	rjmp	.+16     	; 0x6da <vfprintf+0xe6>
 6ca:	8c 36       	cpi	r24, 0x6C	; 108
 6cc:	21 f4       	brne	.+8      	; 0x6d6 <vfprintf+0xe2>
 6ce:	83 2d       	mov	r24, r3
 6d0:	80 68       	ori	r24, 0x80	; 128
 6d2:	38 2e       	mov	r3, r24
 6d4:	02 c0       	rjmp	.+4      	; 0x6da <vfprintf+0xe6>
 6d6:	88 36       	cpi	r24, 0x68	; 104
 6d8:	41 f4       	brne	.+16     	; 0x6ea <vfprintf+0xf6>
 6da:	f7 01       	movw	r30, r14
 6dc:	93 fd       	sbrc	r25, 3
 6de:	85 91       	lpm	r24, Z+
 6e0:	93 ff       	sbrs	r25, 3
 6e2:	81 91       	ld	r24, Z+
 6e4:	7f 01       	movw	r14, r30
 6e6:	81 11       	cpse	r24, r1
 6e8:	b3 cf       	rjmp	.-154    	; 0x650 <vfprintf+0x5c>
 6ea:	98 2f       	mov	r25, r24
 6ec:	9f 7d       	andi	r25, 0xDF	; 223
 6ee:	95 54       	subi	r25, 0x45	; 69
 6f0:	93 30       	cpi	r25, 0x03	; 3
 6f2:	28 f4       	brcc	.+10     	; 0x6fe <vfprintf+0x10a>
 6f4:	0c 5f       	subi	r16, 0xFC	; 252
 6f6:	1f 4f       	sbci	r17, 0xFF	; 255
 6f8:	9f e3       	ldi	r25, 0x3F	; 63
 6fa:	99 83       	std	Y+1, r25	; 0x01
 6fc:	0d c0       	rjmp	.+26     	; 0x718 <vfprintf+0x124>
 6fe:	83 36       	cpi	r24, 0x63	; 99
 700:	31 f0       	breq	.+12     	; 0x70e <vfprintf+0x11a>
 702:	83 37       	cpi	r24, 0x73	; 115
 704:	71 f0       	breq	.+28     	; 0x722 <vfprintf+0x12e>
 706:	83 35       	cpi	r24, 0x53	; 83
 708:	09 f0       	breq	.+2      	; 0x70c <vfprintf+0x118>
 70a:	59 c0       	rjmp	.+178    	; 0x7be <vfprintf+0x1ca>
 70c:	21 c0       	rjmp	.+66     	; 0x750 <vfprintf+0x15c>
 70e:	f8 01       	movw	r30, r16
 710:	80 81       	ld	r24, Z
 712:	89 83       	std	Y+1, r24	; 0x01
 714:	0e 5f       	subi	r16, 0xFE	; 254
 716:	1f 4f       	sbci	r17, 0xFF	; 255
 718:	88 24       	eor	r8, r8
 71a:	83 94       	inc	r8
 71c:	91 2c       	mov	r9, r1
 71e:	53 01       	movw	r10, r6
 720:	13 c0       	rjmp	.+38     	; 0x748 <vfprintf+0x154>
 722:	28 01       	movw	r4, r16
 724:	f2 e0       	ldi	r31, 0x02	; 2
 726:	4f 0e       	add	r4, r31
 728:	51 1c       	adc	r5, r1
 72a:	f8 01       	movw	r30, r16
 72c:	a0 80       	ld	r10, Z
 72e:	b1 80       	ldd	r11, Z+1	; 0x01
 730:	36 fe       	sbrs	r3, 6
 732:	03 c0       	rjmp	.+6      	; 0x73a <vfprintf+0x146>
 734:	69 2d       	mov	r22, r9
 736:	70 e0       	ldi	r23, 0x00	; 0
 738:	02 c0       	rjmp	.+4      	; 0x73e <vfprintf+0x14a>
 73a:	6f ef       	ldi	r22, 0xFF	; 255
 73c:	7f ef       	ldi	r23, 0xFF	; 255
 73e:	c5 01       	movw	r24, r10
 740:	0e 94 e6 04 	call	0x9cc	; 0x9cc <strnlen>
 744:	4c 01       	movw	r8, r24
 746:	82 01       	movw	r16, r4
 748:	f3 2d       	mov	r31, r3
 74a:	ff 77       	andi	r31, 0x7F	; 127
 74c:	3f 2e       	mov	r3, r31
 74e:	16 c0       	rjmp	.+44     	; 0x77c <vfprintf+0x188>
 750:	28 01       	movw	r4, r16
 752:	22 e0       	ldi	r18, 0x02	; 2
 754:	42 0e       	add	r4, r18
 756:	51 1c       	adc	r5, r1
 758:	f8 01       	movw	r30, r16
 75a:	a0 80       	ld	r10, Z
 75c:	b1 80       	ldd	r11, Z+1	; 0x01
 75e:	36 fe       	sbrs	r3, 6
 760:	03 c0       	rjmp	.+6      	; 0x768 <vfprintf+0x174>
 762:	69 2d       	mov	r22, r9
 764:	70 e0       	ldi	r23, 0x00	; 0
 766:	02 c0       	rjmp	.+4      	; 0x76c <vfprintf+0x178>
 768:	6f ef       	ldi	r22, 0xFF	; 255
 76a:	7f ef       	ldi	r23, 0xFF	; 255
 76c:	c5 01       	movw	r24, r10
 76e:	0e 94 db 04 	call	0x9b6	; 0x9b6 <strnlen_P>
 772:	4c 01       	movw	r8, r24
 774:	f3 2d       	mov	r31, r3
 776:	f0 68       	ori	r31, 0x80	; 128
 778:	3f 2e       	mov	r3, r31
 77a:	82 01       	movw	r16, r4
 77c:	33 fc       	sbrc	r3, 3
 77e:	1b c0       	rjmp	.+54     	; 0x7b6 <vfprintf+0x1c2>
 780:	82 2d       	mov	r24, r2
 782:	90 e0       	ldi	r25, 0x00	; 0
 784:	88 16       	cp	r8, r24
 786:	99 06       	cpc	r9, r25
 788:	b0 f4       	brcc	.+44     	; 0x7b6 <vfprintf+0x1c2>
 78a:	b6 01       	movw	r22, r12
 78c:	80 e2       	ldi	r24, 0x20	; 32
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 794:	2a 94       	dec	r2
 796:	f4 cf       	rjmp	.-24     	; 0x780 <vfprintf+0x18c>
 798:	f5 01       	movw	r30, r10
 79a:	37 fc       	sbrc	r3, 7
 79c:	85 91       	lpm	r24, Z+
 79e:	37 fe       	sbrs	r3, 7
 7a0:	81 91       	ld	r24, Z+
 7a2:	5f 01       	movw	r10, r30
 7a4:	b6 01       	movw	r22, r12
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 7ac:	21 10       	cpse	r2, r1
 7ae:	2a 94       	dec	r2
 7b0:	21 e0       	ldi	r18, 0x01	; 1
 7b2:	82 1a       	sub	r8, r18
 7b4:	91 08       	sbc	r9, r1
 7b6:	81 14       	cp	r8, r1
 7b8:	91 04       	cpc	r9, r1
 7ba:	71 f7       	brne	.-36     	; 0x798 <vfprintf+0x1a4>
 7bc:	e8 c0       	rjmp	.+464    	; 0x98e <__stack+0x8f>
 7be:	84 36       	cpi	r24, 0x64	; 100
 7c0:	11 f0       	breq	.+4      	; 0x7c6 <vfprintf+0x1d2>
 7c2:	89 36       	cpi	r24, 0x69	; 105
 7c4:	41 f5       	brne	.+80     	; 0x816 <vfprintf+0x222>
 7c6:	f8 01       	movw	r30, r16
 7c8:	37 fe       	sbrs	r3, 7
 7ca:	07 c0       	rjmp	.+14     	; 0x7da <vfprintf+0x1e6>
 7cc:	60 81       	ld	r22, Z
 7ce:	71 81       	ldd	r23, Z+1	; 0x01
 7d0:	82 81       	ldd	r24, Z+2	; 0x02
 7d2:	93 81       	ldd	r25, Z+3	; 0x03
 7d4:	0c 5f       	subi	r16, 0xFC	; 252
 7d6:	1f 4f       	sbci	r17, 0xFF	; 255
 7d8:	08 c0       	rjmp	.+16     	; 0x7ea <vfprintf+0x1f6>
 7da:	60 81       	ld	r22, Z
 7dc:	71 81       	ldd	r23, Z+1	; 0x01
 7de:	07 2e       	mov	r0, r23
 7e0:	00 0c       	add	r0, r0
 7e2:	88 0b       	sbc	r24, r24
 7e4:	99 0b       	sbc	r25, r25
 7e6:	0e 5f       	subi	r16, 0xFE	; 254
 7e8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ea:	f3 2d       	mov	r31, r3
 7ec:	ff 76       	andi	r31, 0x6F	; 111
 7ee:	3f 2e       	mov	r3, r31
 7f0:	97 ff       	sbrs	r25, 7
 7f2:	09 c0       	rjmp	.+18     	; 0x806 <vfprintf+0x212>
 7f4:	90 95       	com	r25
 7f6:	80 95       	com	r24
 7f8:	70 95       	com	r23
 7fa:	61 95       	neg	r22
 7fc:	7f 4f       	sbci	r23, 0xFF	; 255
 7fe:	8f 4f       	sbci	r24, 0xFF	; 255
 800:	9f 4f       	sbci	r25, 0xFF	; 255
 802:	f0 68       	ori	r31, 0x80	; 128
 804:	3f 2e       	mov	r3, r31
 806:	2a e0       	ldi	r18, 0x0A	; 10
 808:	30 e0       	ldi	r19, 0x00	; 0
 80a:	a3 01       	movw	r20, r6
 80c:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__ultoa_invert>
 810:	88 2e       	mov	r8, r24
 812:	86 18       	sub	r8, r6
 814:	45 c0       	rjmp	.+138    	; 0x8a0 <vfprintf+0x2ac>
 816:	85 37       	cpi	r24, 0x75	; 117
 818:	31 f4       	brne	.+12     	; 0x826 <vfprintf+0x232>
 81a:	23 2d       	mov	r18, r3
 81c:	2f 7e       	andi	r18, 0xEF	; 239
 81e:	b2 2e       	mov	r11, r18
 820:	2a e0       	ldi	r18, 0x0A	; 10
 822:	30 e0       	ldi	r19, 0x00	; 0
 824:	25 c0       	rjmp	.+74     	; 0x870 <vfprintf+0x27c>
 826:	93 2d       	mov	r25, r3
 828:	99 7f       	andi	r25, 0xF9	; 249
 82a:	b9 2e       	mov	r11, r25
 82c:	8f 36       	cpi	r24, 0x6F	; 111
 82e:	c1 f0       	breq	.+48     	; 0x860 <vfprintf+0x26c>
 830:	18 f4       	brcc	.+6      	; 0x838 <vfprintf+0x244>
 832:	88 35       	cpi	r24, 0x58	; 88
 834:	79 f0       	breq	.+30     	; 0x854 <vfprintf+0x260>
 836:	b5 c0       	rjmp	.+362    	; 0x9a2 <__stack+0xa3>
 838:	80 37       	cpi	r24, 0x70	; 112
 83a:	19 f0       	breq	.+6      	; 0x842 <vfprintf+0x24e>
 83c:	88 37       	cpi	r24, 0x78	; 120
 83e:	21 f0       	breq	.+8      	; 0x848 <vfprintf+0x254>
 840:	b0 c0       	rjmp	.+352    	; 0x9a2 <__stack+0xa3>
 842:	e9 2f       	mov	r30, r25
 844:	e0 61       	ori	r30, 0x10	; 16
 846:	be 2e       	mov	r11, r30
 848:	b4 fe       	sbrs	r11, 4
 84a:	0d c0       	rjmp	.+26     	; 0x866 <vfprintf+0x272>
 84c:	fb 2d       	mov	r31, r11
 84e:	f4 60       	ori	r31, 0x04	; 4
 850:	bf 2e       	mov	r11, r31
 852:	09 c0       	rjmp	.+18     	; 0x866 <vfprintf+0x272>
 854:	34 fe       	sbrs	r3, 4
 856:	0a c0       	rjmp	.+20     	; 0x86c <vfprintf+0x278>
 858:	29 2f       	mov	r18, r25
 85a:	26 60       	ori	r18, 0x06	; 6
 85c:	b2 2e       	mov	r11, r18
 85e:	06 c0       	rjmp	.+12     	; 0x86c <vfprintf+0x278>
 860:	28 e0       	ldi	r18, 0x08	; 8
 862:	30 e0       	ldi	r19, 0x00	; 0
 864:	05 c0       	rjmp	.+10     	; 0x870 <vfprintf+0x27c>
 866:	20 e1       	ldi	r18, 0x10	; 16
 868:	30 e0       	ldi	r19, 0x00	; 0
 86a:	02 c0       	rjmp	.+4      	; 0x870 <vfprintf+0x27c>
 86c:	20 e1       	ldi	r18, 0x10	; 16
 86e:	32 e0       	ldi	r19, 0x02	; 2
 870:	f8 01       	movw	r30, r16
 872:	b7 fe       	sbrs	r11, 7
 874:	07 c0       	rjmp	.+14     	; 0x884 <vfprintf+0x290>
 876:	60 81       	ld	r22, Z
 878:	71 81       	ldd	r23, Z+1	; 0x01
 87a:	82 81       	ldd	r24, Z+2	; 0x02
 87c:	93 81       	ldd	r25, Z+3	; 0x03
 87e:	0c 5f       	subi	r16, 0xFC	; 252
 880:	1f 4f       	sbci	r17, 0xFF	; 255
 882:	06 c0       	rjmp	.+12     	; 0x890 <vfprintf+0x29c>
 884:	60 81       	ld	r22, Z
 886:	71 81       	ldd	r23, Z+1	; 0x01
 888:	80 e0       	ldi	r24, 0x00	; 0
 88a:	90 e0       	ldi	r25, 0x00	; 0
 88c:	0e 5f       	subi	r16, 0xFE	; 254
 88e:	1f 4f       	sbci	r17, 0xFF	; 255
 890:	a3 01       	movw	r20, r6
 892:	0e 94 2d 05 	call	0xa5a	; 0xa5a <__ultoa_invert>
 896:	88 2e       	mov	r8, r24
 898:	86 18       	sub	r8, r6
 89a:	fb 2d       	mov	r31, r11
 89c:	ff 77       	andi	r31, 0x7F	; 127
 89e:	3f 2e       	mov	r3, r31
 8a0:	36 fe       	sbrs	r3, 6
 8a2:	0d c0       	rjmp	.+26     	; 0x8be <vfprintf+0x2ca>
 8a4:	23 2d       	mov	r18, r3
 8a6:	2e 7f       	andi	r18, 0xFE	; 254
 8a8:	a2 2e       	mov	r10, r18
 8aa:	89 14       	cp	r8, r9
 8ac:	58 f4       	brcc	.+22     	; 0x8c4 <vfprintf+0x2d0>
 8ae:	34 fe       	sbrs	r3, 4
 8b0:	0b c0       	rjmp	.+22     	; 0x8c8 <vfprintf+0x2d4>
 8b2:	32 fc       	sbrc	r3, 2
 8b4:	09 c0       	rjmp	.+18     	; 0x8c8 <vfprintf+0x2d4>
 8b6:	83 2d       	mov	r24, r3
 8b8:	8e 7e       	andi	r24, 0xEE	; 238
 8ba:	a8 2e       	mov	r10, r24
 8bc:	05 c0       	rjmp	.+10     	; 0x8c8 <vfprintf+0x2d4>
 8be:	b8 2c       	mov	r11, r8
 8c0:	a3 2c       	mov	r10, r3
 8c2:	03 c0       	rjmp	.+6      	; 0x8ca <vfprintf+0x2d6>
 8c4:	b8 2c       	mov	r11, r8
 8c6:	01 c0       	rjmp	.+2      	; 0x8ca <vfprintf+0x2d6>
 8c8:	b9 2c       	mov	r11, r9
 8ca:	a4 fe       	sbrs	r10, 4
 8cc:	0f c0       	rjmp	.+30     	; 0x8ec <vfprintf+0x2f8>
 8ce:	fe 01       	movw	r30, r28
 8d0:	e8 0d       	add	r30, r8
 8d2:	f1 1d       	adc	r31, r1
 8d4:	80 81       	ld	r24, Z
 8d6:	80 33       	cpi	r24, 0x30	; 48
 8d8:	21 f4       	brne	.+8      	; 0x8e2 <vfprintf+0x2ee>
 8da:	9a 2d       	mov	r25, r10
 8dc:	99 7e       	andi	r25, 0xE9	; 233
 8de:	a9 2e       	mov	r10, r25
 8e0:	09 c0       	rjmp	.+18     	; 0x8f4 <vfprintf+0x300>
 8e2:	a2 fe       	sbrs	r10, 2
 8e4:	06 c0       	rjmp	.+12     	; 0x8f2 <vfprintf+0x2fe>
 8e6:	b3 94       	inc	r11
 8e8:	b3 94       	inc	r11
 8ea:	04 c0       	rjmp	.+8      	; 0x8f4 <vfprintf+0x300>
 8ec:	8a 2d       	mov	r24, r10
 8ee:	86 78       	andi	r24, 0x86	; 134
 8f0:	09 f0       	breq	.+2      	; 0x8f4 <vfprintf+0x300>
 8f2:	b3 94       	inc	r11
 8f4:	a3 fc       	sbrc	r10, 3
 8f6:	11 c0       	rjmp	.+34     	; 0x91a <__stack+0x1b>
 8f8:	a0 fe       	sbrs	r10, 0
 8fa:	06 c0       	rjmp	.+12     	; 0x908 <__stack+0x9>
 8fc:	b2 14       	cp	r11, r2
 8fe:	88 f4       	brcc	.+34     	; 0x922 <__stack+0x23>
 900:	28 0c       	add	r2, r8
 902:	92 2c       	mov	r9, r2
 904:	9b 18       	sub	r9, r11
 906:	0e c0       	rjmp	.+28     	; 0x924 <__stack+0x25>
 908:	b2 14       	cp	r11, r2
 90a:	60 f4       	brcc	.+24     	; 0x924 <__stack+0x25>
 90c:	b6 01       	movw	r22, r12
 90e:	80 e2       	ldi	r24, 0x20	; 32
 910:	90 e0       	ldi	r25, 0x00	; 0
 912:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 916:	b3 94       	inc	r11
 918:	f7 cf       	rjmp	.-18     	; 0x908 <__stack+0x9>
 91a:	b2 14       	cp	r11, r2
 91c:	18 f4       	brcc	.+6      	; 0x924 <__stack+0x25>
 91e:	2b 18       	sub	r2, r11
 920:	02 c0       	rjmp	.+4      	; 0x926 <__stack+0x27>
 922:	98 2c       	mov	r9, r8
 924:	21 2c       	mov	r2, r1
 926:	a4 fe       	sbrs	r10, 4
 928:	10 c0       	rjmp	.+32     	; 0x94a <__stack+0x4b>
 92a:	b6 01       	movw	r22, r12
 92c:	80 e3       	ldi	r24, 0x30	; 48
 92e:	90 e0       	ldi	r25, 0x00	; 0
 930:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 934:	a2 fe       	sbrs	r10, 2
 936:	17 c0       	rjmp	.+46     	; 0x966 <__stack+0x67>
 938:	a1 fc       	sbrc	r10, 1
 93a:	03 c0       	rjmp	.+6      	; 0x942 <__stack+0x43>
 93c:	88 e7       	ldi	r24, 0x78	; 120
 93e:	90 e0       	ldi	r25, 0x00	; 0
 940:	02 c0       	rjmp	.+4      	; 0x946 <__stack+0x47>
 942:	88 e5       	ldi	r24, 0x58	; 88
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	b6 01       	movw	r22, r12
 948:	0c c0       	rjmp	.+24     	; 0x962 <__stack+0x63>
 94a:	8a 2d       	mov	r24, r10
 94c:	86 78       	andi	r24, 0x86	; 134
 94e:	59 f0       	breq	.+22     	; 0x966 <__stack+0x67>
 950:	a1 fe       	sbrs	r10, 1
 952:	02 c0       	rjmp	.+4      	; 0x958 <__stack+0x59>
 954:	8b e2       	ldi	r24, 0x2B	; 43
 956:	01 c0       	rjmp	.+2      	; 0x95a <__stack+0x5b>
 958:	80 e2       	ldi	r24, 0x20	; 32
 95a:	a7 fc       	sbrc	r10, 7
 95c:	8d e2       	ldi	r24, 0x2D	; 45
 95e:	b6 01       	movw	r22, r12
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 966:	89 14       	cp	r8, r9
 968:	38 f4       	brcc	.+14     	; 0x978 <__stack+0x79>
 96a:	b6 01       	movw	r22, r12
 96c:	80 e3       	ldi	r24, 0x30	; 48
 96e:	90 e0       	ldi	r25, 0x00	; 0
 970:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 974:	9a 94       	dec	r9
 976:	f7 cf       	rjmp	.-18     	; 0x966 <__stack+0x67>
 978:	8a 94       	dec	r8
 97a:	f3 01       	movw	r30, r6
 97c:	e8 0d       	add	r30, r8
 97e:	f1 1d       	adc	r31, r1
 980:	80 81       	ld	r24, Z
 982:	b6 01       	movw	r22, r12
 984:	90 e0       	ldi	r25, 0x00	; 0
 986:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 98a:	81 10       	cpse	r8, r1
 98c:	f5 cf       	rjmp	.-22     	; 0x978 <__stack+0x79>
 98e:	22 20       	and	r2, r2
 990:	09 f4       	brne	.+2      	; 0x994 <__stack+0x95>
 992:	42 ce       	rjmp	.-892    	; 0x618 <vfprintf+0x24>
 994:	b6 01       	movw	r22, r12
 996:	80 e2       	ldi	r24, 0x20	; 32
 998:	90 e0       	ldi	r25, 0x00	; 0
 99a:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <fputc>
 99e:	2a 94       	dec	r2
 9a0:	f6 cf       	rjmp	.-20     	; 0x98e <__stack+0x8f>
 9a2:	f6 01       	movw	r30, r12
 9a4:	86 81       	ldd	r24, Z+6	; 0x06
 9a6:	97 81       	ldd	r25, Z+7	; 0x07
 9a8:	02 c0       	rjmp	.+4      	; 0x9ae <__stack+0xaf>
 9aa:	8f ef       	ldi	r24, 0xFF	; 255
 9ac:	9f ef       	ldi	r25, 0xFF	; 255
 9ae:	2b 96       	adiw	r28, 0x0b	; 11
 9b0:	e2 e1       	ldi	r30, 0x12	; 18
 9b2:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <__epilogue_restores__>

000009b6 <strnlen_P>:
 9b6:	fc 01       	movw	r30, r24
 9b8:	05 90       	lpm	r0, Z+
 9ba:	61 50       	subi	r22, 0x01	; 1
 9bc:	70 40       	sbci	r23, 0x00	; 0
 9be:	01 10       	cpse	r0, r1
 9c0:	d8 f7       	brcc	.-10     	; 0x9b8 <strnlen_P+0x2>
 9c2:	80 95       	com	r24
 9c4:	90 95       	com	r25
 9c6:	8e 0f       	add	r24, r30
 9c8:	9f 1f       	adc	r25, r31
 9ca:	08 95       	ret

000009cc <strnlen>:
 9cc:	fc 01       	movw	r30, r24
 9ce:	61 50       	subi	r22, 0x01	; 1
 9d0:	70 40       	sbci	r23, 0x00	; 0
 9d2:	01 90       	ld	r0, Z+
 9d4:	01 10       	cpse	r0, r1
 9d6:	d8 f7       	brcc	.-10     	; 0x9ce <strnlen+0x2>
 9d8:	80 95       	com	r24
 9da:	90 95       	com	r25
 9dc:	8e 0f       	add	r24, r30
 9de:	9f 1f       	adc	r25, r31
 9e0:	08 95       	ret

000009e2 <fputc>:
 9e2:	0f 93       	push	r16
 9e4:	1f 93       	push	r17
 9e6:	cf 93       	push	r28
 9e8:	df 93       	push	r29
 9ea:	fb 01       	movw	r30, r22
 9ec:	23 81       	ldd	r18, Z+3	; 0x03
 9ee:	21 fd       	sbrc	r18, 1
 9f0:	03 c0       	rjmp	.+6      	; 0x9f8 <fputc+0x16>
 9f2:	8f ef       	ldi	r24, 0xFF	; 255
 9f4:	9f ef       	ldi	r25, 0xFF	; 255
 9f6:	2c c0       	rjmp	.+88     	; 0xa50 <fputc+0x6e>
 9f8:	22 ff       	sbrs	r18, 2
 9fa:	16 c0       	rjmp	.+44     	; 0xa28 <fputc+0x46>
 9fc:	46 81       	ldd	r20, Z+6	; 0x06
 9fe:	57 81       	ldd	r21, Z+7	; 0x07
 a00:	24 81       	ldd	r18, Z+4	; 0x04
 a02:	35 81       	ldd	r19, Z+5	; 0x05
 a04:	42 17       	cp	r20, r18
 a06:	53 07       	cpc	r21, r19
 a08:	44 f4       	brge	.+16     	; 0xa1a <fputc+0x38>
 a0a:	a0 81       	ld	r26, Z
 a0c:	b1 81       	ldd	r27, Z+1	; 0x01
 a0e:	9d 01       	movw	r18, r26
 a10:	2f 5f       	subi	r18, 0xFF	; 255
 a12:	3f 4f       	sbci	r19, 0xFF	; 255
 a14:	31 83       	std	Z+1, r19	; 0x01
 a16:	20 83       	st	Z, r18
 a18:	8c 93       	st	X, r24
 a1a:	26 81       	ldd	r18, Z+6	; 0x06
 a1c:	37 81       	ldd	r19, Z+7	; 0x07
 a1e:	2f 5f       	subi	r18, 0xFF	; 255
 a20:	3f 4f       	sbci	r19, 0xFF	; 255
 a22:	37 83       	std	Z+7, r19	; 0x07
 a24:	26 83       	std	Z+6, r18	; 0x06
 a26:	14 c0       	rjmp	.+40     	; 0xa50 <fputc+0x6e>
 a28:	8b 01       	movw	r16, r22
 a2a:	ec 01       	movw	r28, r24
 a2c:	fb 01       	movw	r30, r22
 a2e:	00 84       	ldd	r0, Z+8	; 0x08
 a30:	f1 85       	ldd	r31, Z+9	; 0x09
 a32:	e0 2d       	mov	r30, r0
 a34:	09 95       	icall
 a36:	89 2b       	or	r24, r25
 a38:	e1 f6       	brne	.-72     	; 0x9f2 <fputc+0x10>
 a3a:	d8 01       	movw	r26, r16
 a3c:	16 96       	adiw	r26, 0x06	; 6
 a3e:	8d 91       	ld	r24, X+
 a40:	9c 91       	ld	r25, X
 a42:	17 97       	sbiw	r26, 0x07	; 7
 a44:	01 96       	adiw	r24, 0x01	; 1
 a46:	17 96       	adiw	r26, 0x07	; 7
 a48:	9c 93       	st	X, r25
 a4a:	8e 93       	st	-X, r24
 a4c:	16 97       	sbiw	r26, 0x06	; 6
 a4e:	ce 01       	movw	r24, r28
 a50:	df 91       	pop	r29
 a52:	cf 91       	pop	r28
 a54:	1f 91       	pop	r17
 a56:	0f 91       	pop	r16
 a58:	08 95       	ret

00000a5a <__ultoa_invert>:
 a5a:	fa 01       	movw	r30, r20
 a5c:	aa 27       	eor	r26, r26
 a5e:	28 30       	cpi	r18, 0x08	; 8
 a60:	51 f1       	breq	.+84     	; 0xab6 <__ultoa_invert+0x5c>
 a62:	20 31       	cpi	r18, 0x10	; 16
 a64:	81 f1       	breq	.+96     	; 0xac6 <__ultoa_invert+0x6c>
 a66:	e8 94       	clt
 a68:	6f 93       	push	r22
 a6a:	6e 7f       	andi	r22, 0xFE	; 254
 a6c:	6e 5f       	subi	r22, 0xFE	; 254
 a6e:	7f 4f       	sbci	r23, 0xFF	; 255
 a70:	8f 4f       	sbci	r24, 0xFF	; 255
 a72:	9f 4f       	sbci	r25, 0xFF	; 255
 a74:	af 4f       	sbci	r26, 0xFF	; 255
 a76:	b1 e0       	ldi	r27, 0x01	; 1
 a78:	3e d0       	rcall	.+124    	; 0xaf6 <__ultoa_invert+0x9c>
 a7a:	b4 e0       	ldi	r27, 0x04	; 4
 a7c:	3c d0       	rcall	.+120    	; 0xaf6 <__ultoa_invert+0x9c>
 a7e:	67 0f       	add	r22, r23
 a80:	78 1f       	adc	r23, r24
 a82:	89 1f       	adc	r24, r25
 a84:	9a 1f       	adc	r25, r26
 a86:	a1 1d       	adc	r26, r1
 a88:	68 0f       	add	r22, r24
 a8a:	79 1f       	adc	r23, r25
 a8c:	8a 1f       	adc	r24, r26
 a8e:	91 1d       	adc	r25, r1
 a90:	a1 1d       	adc	r26, r1
 a92:	6a 0f       	add	r22, r26
 a94:	71 1d       	adc	r23, r1
 a96:	81 1d       	adc	r24, r1
 a98:	91 1d       	adc	r25, r1
 a9a:	a1 1d       	adc	r26, r1
 a9c:	20 d0       	rcall	.+64     	; 0xade <__ultoa_invert+0x84>
 a9e:	09 f4       	brne	.+2      	; 0xaa2 <__ultoa_invert+0x48>
 aa0:	68 94       	set
 aa2:	3f 91       	pop	r19
 aa4:	2a e0       	ldi	r18, 0x0A	; 10
 aa6:	26 9f       	mul	r18, r22
 aa8:	11 24       	eor	r1, r1
 aaa:	30 19       	sub	r19, r0
 aac:	30 5d       	subi	r19, 0xD0	; 208
 aae:	31 93       	st	Z+, r19
 ab0:	de f6       	brtc	.-74     	; 0xa68 <__ultoa_invert+0xe>
 ab2:	cf 01       	movw	r24, r30
 ab4:	08 95       	ret
 ab6:	46 2f       	mov	r20, r22
 ab8:	47 70       	andi	r20, 0x07	; 7
 aba:	40 5d       	subi	r20, 0xD0	; 208
 abc:	41 93       	st	Z+, r20
 abe:	b3 e0       	ldi	r27, 0x03	; 3
 ac0:	0f d0       	rcall	.+30     	; 0xae0 <__ultoa_invert+0x86>
 ac2:	c9 f7       	brne	.-14     	; 0xab6 <__ultoa_invert+0x5c>
 ac4:	f6 cf       	rjmp	.-20     	; 0xab2 <__ultoa_invert+0x58>
 ac6:	46 2f       	mov	r20, r22
 ac8:	4f 70       	andi	r20, 0x0F	; 15
 aca:	40 5d       	subi	r20, 0xD0	; 208
 acc:	4a 33       	cpi	r20, 0x3A	; 58
 ace:	18 f0       	brcs	.+6      	; 0xad6 <__ultoa_invert+0x7c>
 ad0:	49 5d       	subi	r20, 0xD9	; 217
 ad2:	31 fd       	sbrc	r19, 1
 ad4:	40 52       	subi	r20, 0x20	; 32
 ad6:	41 93       	st	Z+, r20
 ad8:	02 d0       	rcall	.+4      	; 0xade <__ultoa_invert+0x84>
 ada:	a9 f7       	brne	.-22     	; 0xac6 <__ultoa_invert+0x6c>
 adc:	ea cf       	rjmp	.-44     	; 0xab2 <__ultoa_invert+0x58>
 ade:	b4 e0       	ldi	r27, 0x04	; 4
 ae0:	a6 95       	lsr	r26
 ae2:	97 95       	ror	r25
 ae4:	87 95       	ror	r24
 ae6:	77 95       	ror	r23
 ae8:	67 95       	ror	r22
 aea:	ba 95       	dec	r27
 aec:	c9 f7       	brne	.-14     	; 0xae0 <__ultoa_invert+0x86>
 aee:	00 97       	sbiw	r24, 0x00	; 0
 af0:	61 05       	cpc	r22, r1
 af2:	71 05       	cpc	r23, r1
 af4:	08 95       	ret
 af6:	9b 01       	movw	r18, r22
 af8:	ac 01       	movw	r20, r24
 afa:	0a 2e       	mov	r0, r26
 afc:	06 94       	lsr	r0
 afe:	57 95       	ror	r21
 b00:	47 95       	ror	r20
 b02:	37 95       	ror	r19
 b04:	27 95       	ror	r18
 b06:	ba 95       	dec	r27
 b08:	c9 f7       	brne	.-14     	; 0xafc <__ultoa_invert+0xa2>
 b0a:	62 0f       	add	r22, r18
 b0c:	73 1f       	adc	r23, r19
 b0e:	84 1f       	adc	r24, r20
 b10:	95 1f       	adc	r25, r21
 b12:	a0 1d       	adc	r26, r0
 b14:	08 95       	ret

00000b16 <__prologue_saves__>:
 b16:	2f 92       	push	r2
 b18:	3f 92       	push	r3
 b1a:	4f 92       	push	r4
 b1c:	5f 92       	push	r5
 b1e:	6f 92       	push	r6
 b20:	7f 92       	push	r7
 b22:	8f 92       	push	r8
 b24:	9f 92       	push	r9
 b26:	af 92       	push	r10
 b28:	bf 92       	push	r11
 b2a:	cf 92       	push	r12
 b2c:	df 92       	push	r13
 b2e:	ef 92       	push	r14
 b30:	ff 92       	push	r15
 b32:	0f 93       	push	r16
 b34:	1f 93       	push	r17
 b36:	cf 93       	push	r28
 b38:	df 93       	push	r29
 b3a:	cd b7       	in	r28, 0x3d	; 61
 b3c:	de b7       	in	r29, 0x3e	; 62
 b3e:	ca 1b       	sub	r28, r26
 b40:	db 0b       	sbc	r29, r27
 b42:	0f b6       	in	r0, 0x3f	; 63
 b44:	f8 94       	cli
 b46:	de bf       	out	0x3e, r29	; 62
 b48:	0f be       	out	0x3f, r0	; 63
 b4a:	cd bf       	out	0x3d, r28	; 61
 b4c:	09 94       	ijmp

00000b4e <__epilogue_restores__>:
 b4e:	2a 88       	ldd	r2, Y+18	; 0x12
 b50:	39 88       	ldd	r3, Y+17	; 0x11
 b52:	48 88       	ldd	r4, Y+16	; 0x10
 b54:	5f 84       	ldd	r5, Y+15	; 0x0f
 b56:	6e 84       	ldd	r6, Y+14	; 0x0e
 b58:	7d 84       	ldd	r7, Y+13	; 0x0d
 b5a:	8c 84       	ldd	r8, Y+12	; 0x0c
 b5c:	9b 84       	ldd	r9, Y+11	; 0x0b
 b5e:	aa 84       	ldd	r10, Y+10	; 0x0a
 b60:	b9 84       	ldd	r11, Y+9	; 0x09
 b62:	c8 84       	ldd	r12, Y+8	; 0x08
 b64:	df 80       	ldd	r13, Y+7	; 0x07
 b66:	ee 80       	ldd	r14, Y+6	; 0x06
 b68:	fd 80       	ldd	r15, Y+5	; 0x05
 b6a:	0c 81       	ldd	r16, Y+4	; 0x04
 b6c:	1b 81       	ldd	r17, Y+3	; 0x03
 b6e:	aa 81       	ldd	r26, Y+2	; 0x02
 b70:	b9 81       	ldd	r27, Y+1	; 0x01
 b72:	ce 0f       	add	r28, r30
 b74:	d1 1d       	adc	r29, r1
 b76:	0f b6       	in	r0, 0x3f	; 63
 b78:	f8 94       	cli
 b7a:	de bf       	out	0x3e, r29	; 62
 b7c:	0f be       	out	0x3f, r0	; 63
 b7e:	cd bf       	out	0x3d, r28	; 61
 b80:	ed 01       	movw	r28, r26
 b82:	08 95       	ret

00000b84 <_exit>:
 b84:	f8 94       	cli

00000b86 <__stop_program>:
 b86:	ff cf       	rjmp	.-2      	; 0xb86 <__stop_program>
