
Lab07.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  00000abc  00000b50  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000abc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800130  00800130  00000b80  2**0
                  ALLOC
  3 .stab         00000d20  00000000  00000000  00000b80  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000e25  00000000  00000000  000018a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000007d  00000000  00000000  000026c5  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002744  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000020  00000000  00000000  00002784  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   0000090e  00000000  00000000  000027a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000007d0  00000000  00000000  000030b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   000003a5  00000000  00000000  00003882  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00000040  00000000  00000000  00003c28  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000427  00000000  00000000  00003c68  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000008a  00000000  00000000  0000408f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000010  00000000  00000000  00004119  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  70:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  74:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	ec eb       	ldi	r30, 0xBC	; 188
  90:	fa e0       	ldi	r31, 0x0A	; 10
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a0 33       	cpi	r26, 0x30	; 48
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	a0 e3       	ldi	r26, 0x30	; 48
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a7 33       	cpi	r26, 0x37	; 55
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 5d 00 	call	0xba	; 0xba <main>
  b2:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <main>:
	char state;
	int leds = LEFTMOST;
	int leftScore = 0;
	int rightScore = 0;
	
	lcd_init();
  ba:	0e 94 8e 01 	call	0x31c	; 0x31c <lcd_init>
	stdout = &lcd_stdout;
  be:	80 e0       	ldi	r24, 0x00	; 0
  c0:	91 e0       	ldi	r25, 0x01	; 1
  c2:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <__iob+0x3>
  c6:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <__iob+0x2>
	
	
	DDRD = 0xFF;		
  ca:	8f ef       	ldi	r24, 0xFF	; 255
  cc:	8a b9       	out	0x0a, r24	; 10
	DDRA = 0x10;		
  ce:	80 e1       	ldi	r24, 0x10	; 16
  d0:	81 b9       	out	0x01, r24	; 1
	PORTA |= 0x10;
  d2:	14 9a       	sbi	0x02, 4	; 2
	DDRC |= 0x03;
  d4:	87 b1       	in	r24, 0x07	; 7
  d6:	83 60       	ori	r24, 0x03	; 3
  d8:	87 b9       	out	0x07, r24	; 7
	enum state {left_serve, right_serve, moving_left, moving_right};
	
	char state;
	int leds = LEFTMOST;
	int leftScore = 0;
	int rightScore = 0;
  da:	e1 2c       	mov	r14, r1
  dc:	f1 2c       	mov	r15, r1
    
	enum state {left_serve, right_serve, moving_left, moving_right};
	
	char state;
	int leds = LEFTMOST;
	int leftScore = 0;
  de:	00 e0       	ldi	r16, 0x00	; 0
  e0:	10 e0       	ldi	r17, 0x00	; 0
int main(void) {
    
	enum state {left_serve, right_serve, moving_left, moving_right};
	
	char state;
	int leds = LEFTMOST;
  e2:	c0 e0       	ldi	r28, 0x00	; 0
  e4:	d2 e0       	ldi	r29, 0x02	; 2
	DDRD = 0xFF;		
	DDRA = 0x10;		
	PORTA |= 0x10;
	DDRC |= 0x03;
	
	state = left_serve;
  e6:	91 2c       	mov	r9, r1
			leds = LEFTMOST;
			break;
			
			case right_serve:
			leds = RIGHTMOST;
			break;
  e8:	88 24       	eor	r8, r8
  ea:	83 94       	inc	r8
			leds = leds << 1;
			break;
			
			case moving_right:
			leds = leds >> 1;
			break;
  ec:	0f 2e       	mov	r0, r31
  ee:	f3 e0       	ldi	r31, 0x03	; 3
  f0:	5f 2e       	mov	r5, r31
  f2:	f0 2d       	mov	r31, r0
			
			case left_serve:
			leds = LEFTMOST;
			break;
  f4:	71 2c       	mov	r7, r1
			else state = right_serve;
		}
		switch (state) {
			case moving_left:
			leds = leds << 1;
			break;
  f6:	68 94       	set
  f8:	66 24       	eor	r6, r6
  fa:	61 f8       	bld	r6, 1
		if((leftScore == 15) || (rightScore == 15) || (RESET_BUTTON == PUSHED)) {
			leftScore = 0;
			rightScore = 0;
		}
		
		printf("Left Score: %d\n" , leftScore);
  fc:	0f 2e       	mov	r0, r31
  fe:	fe e0       	ldi	r31, 0x0E	; 14
 100:	af 2e       	mov	r10, r31
 102:	f1 e0       	ldi	r31, 0x01	; 1
 104:	bf 2e       	mov	r11, r31
 106:	f0 2d       	mov	r31, r0
		printf("Right Score: %d\n", rightScore);
 108:	0f 2e       	mov	r0, r31
 10a:	fe e1       	ldi	r31, 0x1E	; 30
 10c:	cf 2e       	mov	r12, r31
 10e:	f1 e0       	ldi	r31, 0x01	; 1
 110:	df 2e       	mov	r13, r31
 112:	f0 2d       	mov	r31, r0
	
	state = left_serve;
	
    while (1) {
		
		if (LEFT_BUTTON == PUSHED) {
 114:	03 9b       	sbis	0x00, 3	; 0
 116:	08 c0       	rjmp	.+16     	; 0x128 <main+0x6e>
			if(leds == LEFTMOST) {
 118:	c1 15       	cp	r28, r1
 11a:	22 e0       	ldi	r18, 0x02	; 2
 11c:	d2 07       	cpc	r29, r18
 11e:	21 f1       	breq	.+72     	; 0x168 <main+0xae>
				state = moving_right;
			}
			else {
				state = right_serve;
				rightScore++;
 120:	8f ef       	ldi	r24, 0xFF	; 255
 122:	e8 1a       	sub	r14, r24
 124:	f8 0a       	sbc	r15, r24
 126:	28 c0       	rjmp	.+80     	; 0x178 <main+0xbe>
			}
		}
		
		else if (RIGHT_BUTTON == PUSHED) {
 128:	00 9b       	sbis	0x00, 0	; 0
 12a:	06 c0       	rjmp	.+12     	; 0x138 <main+0x7e>
			if(leds == RIGHTMOST) {
 12c:	c1 30       	cpi	r28, 0x01	; 1
 12e:	d1 05       	cpc	r29, r1
 130:	b9 f0       	breq	.+46     	; 0x160 <main+0xa6>
				state = moving_left;
			}
			else {
				state = left_serve;
				leftScore++;
 132:	0f 5f       	subi	r16, 0xFF	; 255
 134:	1f 4f       	sbci	r17, 0xFF	; 255
 136:	1c c0       	rjmp	.+56     	; 0x170 <main+0xb6>
			}
		}
		
		else if (leds == 0x00) {
 138:	20 97       	sbiw	r28, 0x00	; 0
 13a:	31 f4       	brne	.+12     	; 0x148 <main+0x8e>
			if (state == moving_right) {
 13c:	88 2d       	mov	r24, r8
 13e:	93 e0       	ldi	r25, 0x03	; 3
 140:	99 12       	cpse	r9, r25
 142:	01 c0       	rjmp	.+2      	; 0x146 <main+0x8c>
 144:	87 2d       	mov	r24, r7
		if (LEFT_BUTTON == PUSHED) {
			if(leds == LEFTMOST) {
				state = moving_right;
			}
			else {
				state = right_serve;
 146:	98 2e       	mov	r9, r24
			if (state == moving_right) {
				state = left_serve;
			}
			else state = right_serve;
		}
		switch (state) {
 148:	21 e0       	ldi	r18, 0x01	; 1
 14a:	92 16       	cp	r9, r18
 14c:	a9 f0       	breq	.+42     	; 0x178 <main+0xbe>
 14e:	92 16       	cp	r9, r18
 150:	78 f0       	brcs	.+30     	; 0x170 <main+0xb6>
 152:	82 e0       	ldi	r24, 0x02	; 2
 154:	98 16       	cp	r9, r24
 156:	21 f0       	breq	.+8      	; 0x160 <main+0xa6>
 158:	93 e0       	ldi	r25, 0x03	; 3
 15a:	99 12       	cpse	r9, r25
 15c:	10 c0       	rjmp	.+32     	; 0x17e <main+0xc4>
 15e:	04 c0       	rjmp	.+8      	; 0x168 <main+0xae>
			case moving_left:
			leds = leds << 1;
 160:	cc 0f       	add	r28, r28
 162:	dd 1f       	adc	r29, r29
			break;
 164:	96 2c       	mov	r9, r6
 166:	0b c0       	rjmp	.+22     	; 0x17e <main+0xc4>
			
			case moving_right:
			leds = leds >> 1;
 168:	d5 95       	asr	r29
 16a:	c7 95       	ror	r28
			break;
 16c:	95 2c       	mov	r9, r5
 16e:	07 c0       	rjmp	.+14     	; 0x17e <main+0xc4>
			
			case left_serve:
			leds = LEFTMOST;
			break;
 170:	97 2c       	mov	r9, r7
			case moving_right:
			leds = leds >> 1;
			break;
			
			case left_serve:
			leds = LEFTMOST;
 172:	c0 e0       	ldi	r28, 0x00	; 0
 174:	d2 e0       	ldi	r29, 0x02	; 2
			break;
 176:	03 c0       	rjmp	.+6      	; 0x17e <main+0xc4>
			
			case right_serve:
			leds = RIGHTMOST;
			break;
 178:	98 2c       	mov	r9, r8
			case left_serve:
			leds = LEFTMOST;
			break;
			
			case right_serve:
			leds = RIGHTMOST;
 17a:	c1 e0       	ldi	r28, 0x01	; 1
 17c:	d0 e0       	ldi	r29, 0x00	; 0
			break;
		}
		
		PORTD = ~leds;
 17e:	8c 2f       	mov	r24, r28
 180:	80 95       	com	r24
 182:	8b b9       	out	0x0b, r24	; 11
		PORTD = (PORTD & 0xFF00) | ((~leds) & 0x00FF);
 184:	9b b1       	in	r25, 0x0b	; 11
 186:	8b b9       	out	0x0b, r24	; 11
		PORTC = (PORTC & 0xFFFC) | (((~leds) & 0x0300) >> 8 );
 188:	88 b1       	in	r24, 0x08	; 8
 18a:	9e 01       	movw	r18, r28
 18c:	20 95       	com	r18
 18e:	30 95       	com	r19
 190:	22 27       	eor	r18, r18
 192:	33 70       	andi	r19, 0x03	; 3
 194:	8c 7f       	andi	r24, 0xFC	; 252
 196:	83 2b       	or	r24, r19
 198:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 19a:	2f e9       	ldi	r18, 0x9F	; 159
 19c:	86 e8       	ldi	r24, 0x86	; 134
 19e:	91 e0       	ldi	r25, 0x01	; 1
 1a0:	21 50       	subi	r18, 0x01	; 1
 1a2:	80 40       	sbci	r24, 0x00	; 0
 1a4:	90 40       	sbci	r25, 0x00	; 0
 1a6:	e1 f7       	brne	.-8      	; 0x1a0 <main+0xe6>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <main+0xf0>
 1aa:	00 00       	nop
		
		_delay_ms(500);
		lcd_iwrite(LCD_CLR);
 1ac:	88 2d       	mov	r24, r8
 1ae:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
		if((leftScore == 15) || (rightScore == 15) || (RESET_BUTTON == PUSHED)) {
 1b2:	0f 30       	cpi	r16, 0x0F	; 15
 1b4:	11 05       	cpc	r17, r1
 1b6:	59 f0       	breq	.+22     	; 0x1ce <main+0x114>
 1b8:	2f e0       	ldi	r18, 0x0F	; 15
 1ba:	e2 16       	cp	r14, r18
 1bc:	f1 04       	cpc	r15, r1
 1be:	61 f0       	breq	.+24     	; 0x1d8 <main+0x11e>
 1c0:	01 9b       	sbis	0x00, 1	; 0
 1c2:	0e c0       	rjmp	.+28     	; 0x1e0 <main+0x126>
			leftScore = 0;
			rightScore = 0;
 1c4:	e1 2c       	mov	r14, r1
 1c6:	f1 2c       	mov	r15, r1
		PORTC = (PORTC & 0xFFFC) | (((~leds) & 0x0300) >> 8 );
		
		_delay_ms(500);
		lcd_iwrite(LCD_CLR);
		if((leftScore == 15) || (rightScore == 15) || (RESET_BUTTON == PUSHED)) {
			leftScore = 0;
 1c8:	00 e0       	ldi	r16, 0x00	; 0
 1ca:	10 e0       	ldi	r17, 0x00	; 0
 1cc:	09 c0       	rjmp	.+18     	; 0x1e0 <main+0x126>
			rightScore = 0;
 1ce:	e1 2c       	mov	r14, r1
 1d0:	f1 2c       	mov	r15, r1
		PORTC = (PORTC & 0xFFFC) | (((~leds) & 0x0300) >> 8 );
		
		_delay_ms(500);
		lcd_iwrite(LCD_CLR);
		if((leftScore == 15) || (rightScore == 15) || (RESET_BUTTON == PUSHED)) {
			leftScore = 0;
 1d2:	00 e0       	ldi	r16, 0x00	; 0
 1d4:	10 e0       	ldi	r17, 0x00	; 0
 1d6:	04 c0       	rjmp	.+8      	; 0x1e0 <main+0x126>
			rightScore = 0;
 1d8:	e1 2c       	mov	r14, r1
 1da:	f1 2c       	mov	r15, r1
		PORTC = (PORTC & 0xFFFC) | (((~leds) & 0x0300) >> 8 );
		
		_delay_ms(500);
		lcd_iwrite(LCD_CLR);
		if((leftScore == 15) || (rightScore == 15) || (RESET_BUTTON == PUSHED)) {
			leftScore = 0;
 1dc:	00 e0       	ldi	r16, 0x00	; 0
 1de:	10 e0       	ldi	r17, 0x00	; 0
			rightScore = 0;
		}
		
		printf("Left Score: %d\n" , leftScore);
 1e0:	1f 93       	push	r17
 1e2:	0f 93       	push	r16
 1e4:	bf 92       	push	r11
 1e6:	af 92       	push	r10
 1e8:	0e 94 7e 02 	call	0x4fc	; 0x4fc <printf>
		printf("Right Score: %d\n", rightScore);
 1ec:	ff 92       	push	r15
 1ee:	ef 92       	push	r14
 1f0:	df 92       	push	r13
 1f2:	cf 92       	push	r12
 1f4:	0e 94 7e 02 	call	0x4fc	; 0x4fc <printf>
		
		
		
		
    }
 1f8:	8d b7       	in	r24, 0x3d	; 61
 1fa:	9e b7       	in	r25, 0x3e	; 62
 1fc:	08 96       	adiw	r24, 0x08	; 8
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	f8 94       	cli
 202:	9e bf       	out	0x3e, r25	; 62
 204:	0f be       	out	0x3f, r0	; 63
 206:	8d bf       	out	0x3d, r24	; 61
 208:	85 cf       	rjmp	.-246    	; 0x114 <main+0x5a>

0000020a <lcd_clk>:
 20a:	47 9a       	sbi	0x08, 7	; 8
 20c:	85 e0       	ldi	r24, 0x05	; 5
 20e:	8a 95       	dec	r24
 210:	f1 f7       	brne	.-4      	; 0x20e <lcd_clk+0x4>
 212:	00 00       	nop
 214:	47 98       	cbi	0x08, 7	; 8
 216:	85 e0       	ldi	r24, 0x05	; 5
 218:	8a 95       	dec	r24
 21a:	f1 f7       	brne	.-4      	; 0x218 <lcd_clk+0xe>
 21c:	00 00       	nop
 21e:	08 95       	ret

00000220 <lcd_busy_wait>:
 220:	84 b1       	in	r24, 0x04	; 4
 222:	80 7f       	andi	r24, 0xF0	; 240
 224:	84 b9       	out	0x04, r24	; 4
 226:	95 b1       	in	r25, 0x05	; 5
 228:	29 2f       	mov	r18, r25
 22a:	20 71       	andi	r18, 0x10	; 16
 22c:	2c 98       	cbi	0x05, 4	; 5
 22e:	46 9a       	sbi	0x08, 6	; 8
 230:	47 9a       	sbi	0x08, 7	; 8
 232:	85 e0       	ldi	r24, 0x05	; 5
 234:	8a 95       	dec	r24
 236:	f1 f7       	brne	.-4      	; 0x234 <lcd_busy_wait+0x14>
 238:	00 00       	nop
 23a:	93 b1       	in	r25, 0x03	; 3
 23c:	47 98       	cbi	0x08, 7	; 8
 23e:	85 e0       	ldi	r24, 0x05	; 5
 240:	8a 95       	dec	r24
 242:	f1 f7       	brne	.-4      	; 0x240 <lcd_busy_wait+0x20>
 244:	00 00       	nop
 246:	47 9a       	sbi	0x08, 7	; 8
 248:	85 e0       	ldi	r24, 0x05	; 5
 24a:	8a 95       	dec	r24
 24c:	f1 f7       	brne	.-4      	; 0x24a <lcd_busy_wait+0x2a>
 24e:	00 00       	nop
 250:	83 b1       	in	r24, 0x03	; 3
 252:	92 95       	swap	r25
 254:	90 7f       	andi	r25, 0xF0	; 240
 256:	8f 70       	andi	r24, 0x0F	; 15
 258:	89 2b       	or	r24, r25
 25a:	47 98       	cbi	0x08, 7	; 8
 25c:	95 e0       	ldi	r25, 0x05	; 5
 25e:	9a 95       	dec	r25
 260:	f1 f7       	brne	.-4      	; 0x25e <lcd_busy_wait+0x3e>
 262:	00 00       	nop
 264:	87 fd       	sbrc	r24, 7
 266:	e4 cf       	rjmp	.-56     	; 0x230 <lcd_busy_wait+0x10>
 268:	46 98       	cbi	0x08, 6	; 8
 26a:	95 b1       	in	r25, 0x05	; 5
 26c:	9f 7e       	andi	r25, 0xEF	; 239
 26e:	92 2b       	or	r25, r18
 270:	95 b9       	out	0x05, r25	; 5
 272:	94 b1       	in	r25, 0x04	; 4
 274:	9f 60       	ori	r25, 0x0F	; 15
 276:	94 b9       	out	0x04, r25	; 4
 278:	08 95       	ret

0000027a <lcd_dread>:
 27a:	0e 94 10 01 	call	0x220	; 0x220 <lcd_busy_wait>
 27e:	84 b1       	in	r24, 0x04	; 4
 280:	80 7f       	andi	r24, 0xF0	; 240
 282:	84 b9       	out	0x04, r24	; 4
 284:	46 9a       	sbi	0x08, 6	; 8
 286:	47 9a       	sbi	0x08, 7	; 8
 288:	85 e0       	ldi	r24, 0x05	; 5
 28a:	8a 95       	dec	r24
 28c:	f1 f7       	brne	.-4      	; 0x28a <lcd_dread+0x10>
 28e:	00 00       	nop
 290:	23 b1       	in	r18, 0x03	; 3
 292:	47 98       	cbi	0x08, 7	; 8
 294:	85 e0       	ldi	r24, 0x05	; 5
 296:	8a 95       	dec	r24
 298:	f1 f7       	brne	.-4      	; 0x296 <lcd_dread+0x1c>
 29a:	00 00       	nop
 29c:	47 9a       	sbi	0x08, 7	; 8
 29e:	85 e0       	ldi	r24, 0x05	; 5
 2a0:	8a 95       	dec	r24
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <lcd_dread+0x26>
 2a4:	00 00       	nop
 2a6:	93 b1       	in	r25, 0x03	; 3
 2a8:	22 95       	swap	r18
 2aa:	20 7f       	andi	r18, 0xF0	; 240
 2ac:	89 2f       	mov	r24, r25
 2ae:	8f 70       	andi	r24, 0x0F	; 15
 2b0:	47 98       	cbi	0x08, 7	; 8
 2b2:	46 98       	cbi	0x08, 6	; 8
 2b4:	94 b1       	in	r25, 0x04	; 4
 2b6:	9f 60       	ori	r25, 0x0F	; 15
 2b8:	94 b9       	out	0x04, r25	; 4
 2ba:	82 2b       	or	r24, r18
 2bc:	08 95       	ret

000002be <lcd_dwrite>:
 2be:	cf 93       	push	r28
 2c0:	c8 2f       	mov	r28, r24
 2c2:	0e 94 10 01 	call	0x220	; 0x220 <lcd_busy_wait>
 2c6:	95 b1       	in	r25, 0x05	; 5
 2c8:	8c 2f       	mov	r24, r28
 2ca:	82 95       	swap	r24
 2cc:	8f 70       	andi	r24, 0x0F	; 15
 2ce:	90 7f       	andi	r25, 0xF0	; 240
 2d0:	98 2b       	or	r25, r24
 2d2:	95 b9       	out	0x05, r25	; 5
 2d4:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_clk>
 2d8:	95 b1       	in	r25, 0x05	; 5
 2da:	8c 2f       	mov	r24, r28
 2dc:	8f 70       	andi	r24, 0x0F	; 15
 2de:	90 7f       	andi	r25, 0xF0	; 240
 2e0:	89 2b       	or	r24, r25
 2e2:	85 b9       	out	0x05, r24	; 5
 2e4:	cf 91       	pop	r28
 2e6:	0c 94 05 01 	jmp	0x20a	; 0x20a <lcd_clk>

000002ea <lcd_iwrite>:
 2ea:	cf 93       	push	r28
 2ec:	c8 2f       	mov	r28, r24
 2ee:	2c 98       	cbi	0x05, 4	; 5
 2f0:	0e 94 10 01 	call	0x220	; 0x220 <lcd_busy_wait>
 2f4:	95 b1       	in	r25, 0x05	; 5
 2f6:	8c 2f       	mov	r24, r28
 2f8:	82 95       	swap	r24
 2fa:	8f 70       	andi	r24, 0x0F	; 15
 2fc:	90 7f       	andi	r25, 0xF0	; 240
 2fe:	98 2b       	or	r25, r24
 300:	95 b9       	out	0x05, r25	; 5
 302:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_clk>
 306:	95 b1       	in	r25, 0x05	; 5
 308:	8c 2f       	mov	r24, r28
 30a:	8f 70       	andi	r24, 0x0F	; 15
 30c:	90 7f       	andi	r25, 0xF0	; 240
 30e:	89 2b       	or	r24, r25
 310:	85 b9       	out	0x05, r24	; 5
 312:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_clk>
 316:	2c 9a       	sbi	0x05, 4	; 5
 318:	cf 91       	pop	r28
 31a:	08 95       	ret

0000031c <lcd_init>:
 31c:	85 b1       	in	r24, 0x05	; 5
 31e:	80 7e       	andi	r24, 0xE0	; 224
 320:	85 b9       	out	0x05, r24	; 5
 322:	2c 98       	cbi	0x05, 4	; 5
 324:	46 98       	cbi	0x08, 6	; 8
 326:	47 98       	cbi	0x08, 7	; 8
 328:	84 b1       	in	r24, 0x04	; 4
 32a:	8f 61       	ori	r24, 0x1F	; 31
 32c:	84 b9       	out	0x04, r24	; 4
 32e:	87 b1       	in	r24, 0x07	; 7
 330:	80 6c       	ori	r24, 0xC0	; 192
 332:	87 b9       	out	0x07, r24	; 7
 334:	8f e5       	ldi	r24, 0x5F	; 95
 336:	9a ee       	ldi	r25, 0xEA	; 234
 338:	01 97       	sbiw	r24, 0x01	; 1
 33a:	f1 f7       	brne	.-4      	; 0x338 <lcd_init+0x1c>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <lcd_init+0x22>
 33e:	00 00       	nop
 340:	85 b1       	in	r24, 0x05	; 5
 342:	80 7f       	andi	r24, 0xF0	; 240
 344:	83 60       	ori	r24, 0x03	; 3
 346:	85 b9       	out	0x05, r24	; 5
 348:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_clk>
 34c:	87 e0       	ldi	r24, 0x07	; 7
 34e:	90 e2       	ldi	r25, 0x20	; 32
 350:	01 97       	sbiw	r24, 0x01	; 1
 352:	f1 f7       	brne	.-4      	; 0x350 <lcd_init+0x34>
 354:	00 c0       	rjmp	.+0      	; 0x356 <lcd_init+0x3a>
 356:	00 00       	nop
 358:	85 b1       	in	r24, 0x05	; 5
 35a:	80 7f       	andi	r24, 0xF0	; 240
 35c:	83 60       	ori	r24, 0x03	; 3
 35e:	85 b9       	out	0x05, r24	; 5
 360:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_clk>
 364:	87 ec       	ldi	r24, 0xC7	; 199
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	01 97       	sbiw	r24, 0x01	; 1
 36a:	f1 f7       	brne	.-4      	; 0x368 <lcd_init+0x4c>
 36c:	00 c0       	rjmp	.+0      	; 0x36e <lcd_init+0x52>
 36e:	00 00       	nop
 370:	85 b1       	in	r24, 0x05	; 5
 372:	80 7f       	andi	r24, 0xF0	; 240
 374:	83 60       	ori	r24, 0x03	; 3
 376:	85 b9       	out	0x05, r24	; 5
 378:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_clk>
 37c:	0e 94 10 01 	call	0x220	; 0x220 <lcd_busy_wait>
 380:	85 b1       	in	r24, 0x05	; 5
 382:	80 7f       	andi	r24, 0xF0	; 240
 384:	82 60       	ori	r24, 0x02	; 2
 386:	85 b9       	out	0x05, r24	; 5
 388:	0e 94 05 01 	call	0x20a	; 0x20a <lcd_clk>
 38c:	84 e2       	ldi	r24, 0x24	; 36
 38e:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 392:	8c e2       	ldi	r24, 0x2C	; 44
 394:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 398:	88 e0       	ldi	r24, 0x08	; 8
 39a:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 3a4:	86 e0       	ldi	r24, 0x06	; 6
 3a6:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 3aa:	8f e0       	ldi	r24, 0x0F	; 15
 3ac:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 3b0:	80 ed       	ldi	r24, 0xD0	; 208
 3b2:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 3b6:	2c 9a       	sbi	0x05, 4	; 5
 3b8:	08 95       	ret

000003ba <lcd_putc>:
 3ba:	3f 92       	push	r3
 3bc:	4f 92       	push	r4
 3be:	5f 92       	push	r5
 3c0:	6f 92       	push	r6
 3c2:	7f 92       	push	r7
 3c4:	8f 92       	push	r8
 3c6:	9f 92       	push	r9
 3c8:	af 92       	push	r10
 3ca:	bf 92       	push	r11
 3cc:	cf 92       	push	r12
 3ce:	df 92       	push	r13
 3d0:	ef 92       	push	r14
 3d2:	ff 92       	push	r15
 3d4:	0f 93       	push	r16
 3d6:	1f 93       	push	r17
 3d8:	cf 93       	push	r28
 3da:	df 93       	push	r29
 3dc:	cd b7       	in	r28, 0x3d	; 61
 3de:	de b7       	in	r29, 0x3e	; 62
 3e0:	e0 97       	sbiw	r28, 0x30	; 48
 3e2:	0f b6       	in	r0, 0x3f	; 63
 3e4:	f8 94       	cli
 3e6:	de bf       	out	0x3e, r29	; 62
 3e8:	0f be       	out	0x3f, r0	; 63
 3ea:	cd bf       	out	0x3d, r28	; 61
 3ec:	8a 30       	cpi	r24, 0x0A	; 10
 3ee:	09 f4       	brne	.+2      	; 0x3f2 <lcd_putc+0x38>
 3f0:	81 c0       	rjmp	.+258    	; 0x4f4 <__LOCK_REGION_LENGTH__+0xf4>
 3f2:	38 2e       	mov	r3, r24
 3f4:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
 3f8:	81 11       	cpse	r24, r1
 3fa:	1d c0       	rjmp	.+58     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 3fc:	83 2d       	mov	r24, r3
 3fe:	0e 94 5f 01 	call	0x2be	; 0x2be <lcd_dwrite>
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	e0 96       	adiw	r28, 0x30	; 48
 408:	0f b6       	in	r0, 0x3f	; 63
 40a:	f8 94       	cli
 40c:	de bf       	out	0x3e, r29	; 62
 40e:	0f be       	out	0x3f, r0	; 63
 410:	cd bf       	out	0x3d, r28	; 61
 412:	df 91       	pop	r29
 414:	cf 91       	pop	r28
 416:	1f 91       	pop	r17
 418:	0f 91       	pop	r16
 41a:	ff 90       	pop	r15
 41c:	ef 90       	pop	r14
 41e:	df 90       	pop	r13
 420:	cf 90       	pop	r12
 422:	bf 90       	pop	r11
 424:	af 90       	pop	r10
 426:	9f 90       	pop	r9
 428:	8f 90       	pop	r8
 42a:	7f 90       	pop	r7
 42c:	6f 90       	pop	r6
 42e:	5f 90       	pop	r5
 430:	4f 90       	pop	r4
 432:	3f 90       	pop	r3
 434:	08 95       	ret
 436:	80 ec       	ldi	r24, 0xC0	; 192
 438:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 43c:	8e 01       	movw	r16, r28
 43e:	0f 5f       	subi	r16, 0xFF	; 255
 440:	1f 4f       	sbci	r17, 0xFF	; 255
 442:	4e 01       	movw	r8, r28
 444:	81 e1       	ldi	r24, 0x11	; 17
 446:	88 0e       	add	r8, r24
 448:	91 1c       	adc	r9, r1
 44a:	78 01       	movw	r14, r16
 44c:	0e 94 3d 01 	call	0x27a	; 0x27a <lcd_dread>
 450:	f7 01       	movw	r30, r14
 452:	81 93       	st	Z+, r24
 454:	7f 01       	movw	r14, r30
 456:	e8 15       	cp	r30, r8
 458:	f9 05       	cpc	r31, r9
 45a:	c1 f7       	brne	.-16     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 45c:	80 e9       	ldi	r24, 0x90	; 144
 45e:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 462:	64 01       	movw	r12, r8
 464:	5e 01       	movw	r10, r28
 466:	f1 e2       	ldi	r31, 0x21	; 33
 468:	af 0e       	add	r10, r31
 46a:	b1 1c       	adc	r11, r1
 46c:	74 01       	movw	r14, r8
 46e:	0e 94 3d 01 	call	0x27a	; 0x27a <lcd_dread>
 472:	f7 01       	movw	r30, r14
 474:	81 93       	st	Z+, r24
 476:	7f 01       	movw	r14, r30
 478:	ea 15       	cp	r30, r10
 47a:	fb 05       	cpc	r31, r11
 47c:	c1 f7       	brne	.-16     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 47e:	80 ed       	ldi	r24, 0xD0	; 208
 480:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 484:	75 01       	movw	r14, r10
 486:	3e 01       	movw	r6, r28
 488:	f1 e3       	ldi	r31, 0x31	; 49
 48a:	6f 0e       	add	r6, r31
 48c:	71 1c       	adc	r7, r1
 48e:	25 01       	movw	r4, r10
 490:	0e 94 3d 01 	call	0x27a	; 0x27a <lcd_dread>
 494:	f2 01       	movw	r30, r4
 496:	81 93       	st	Z+, r24
 498:	2f 01       	movw	r4, r30
 49a:	e6 15       	cp	r30, r6
 49c:	f7 05       	cpc	r31, r7
 49e:	c1 f7       	brne	.-16     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 4a0:	81 e0       	ldi	r24, 0x01	; 1
 4a2:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 4a6:	80 e8       	ldi	r24, 0x80	; 128
 4a8:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 4ac:	f8 01       	movw	r30, r16
 4ae:	81 91       	ld	r24, Z+
 4b0:	8f 01       	movw	r16, r30
 4b2:	0e 94 5f 01 	call	0x2be	; 0x2be <lcd_dwrite>
 4b6:	80 16       	cp	r8, r16
 4b8:	91 06       	cpc	r9, r17
 4ba:	c1 f7       	brne	.-16     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4bc:	80 ec       	ldi	r24, 0xC0	; 192
 4be:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 4c2:	f6 01       	movw	r30, r12
 4c4:	81 91       	ld	r24, Z+
 4c6:	6f 01       	movw	r12, r30
 4c8:	0e 94 5f 01 	call	0x2be	; 0x2be <lcd_dwrite>
 4cc:	ac 14       	cp	r10, r12
 4ce:	bd 04       	cpc	r11, r13
 4d0:	c1 f7       	brne	.-16     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4d2:	80 e9       	ldi	r24, 0x90	; 144
 4d4:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 4d8:	f7 01       	movw	r30, r14
 4da:	81 91       	ld	r24, Z+
 4dc:	7f 01       	movw	r14, r30
 4de:	0e 94 5f 01 	call	0x2be	; 0x2be <lcd_dwrite>
 4e2:	6e 14       	cp	r6, r14
 4e4:	7f 04       	cpc	r7, r15
 4e6:	c1 f7       	brne	.-16     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4e8:	80 ed       	ldi	r24, 0xD0	; 208
 4ea:	0e 94 75 01 	call	0x2ea	; 0x2ea <lcd_iwrite>
 4ee:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <__data_end>
 4f2:	84 cf       	rjmp	.-248    	; 0x3fc <lcd_putc+0x42>
 4f4:	81 e0       	ldi	r24, 0x01	; 1
 4f6:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end>
 4fa:	83 cf       	rjmp	.-250    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>

000004fc <printf>:
 4fc:	a0 e0       	ldi	r26, 0x00	; 0
 4fe:	b0 e0       	ldi	r27, 0x00	; 0
 500:	e4 e8       	ldi	r30, 0x84	; 132
 502:	f2 e0       	ldi	r31, 0x02	; 2
 504:	0c 94 35 05 	jmp	0xa6a	; 0xa6a <__prologue_saves__+0x20>
 508:	ae 01       	movw	r20, r28
 50a:	4b 5f       	subi	r20, 0xFB	; 251
 50c:	5f 4f       	sbci	r21, 0xFF	; 255
 50e:	fa 01       	movw	r30, r20
 510:	61 91       	ld	r22, Z+
 512:	71 91       	ld	r23, Z+
 514:	af 01       	movw	r20, r30
 516:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <__iob+0x2>
 51a:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <__iob+0x3>
 51e:	0e 94 94 02 	call	0x528	; 0x528 <vfprintf>
 522:	e2 e0       	ldi	r30, 0x02	; 2
 524:	0c 94 51 05 	jmp	0xaa2	; 0xaa2 <__epilogue_restores__+0x20>

00000528 <vfprintf>:
 528:	ab e0       	ldi	r26, 0x0B	; 11
 52a:	b0 e0       	ldi	r27, 0x00	; 0
 52c:	ea e9       	ldi	r30, 0x9A	; 154
 52e:	f2 e0       	ldi	r31, 0x02	; 2
 530:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__prologue_saves__>
 534:	6c 01       	movw	r12, r24
 536:	7b 01       	movw	r14, r22
 538:	8a 01       	movw	r16, r20
 53a:	fc 01       	movw	r30, r24
 53c:	17 82       	std	Z+7, r1	; 0x07
 53e:	16 82       	std	Z+6, r1	; 0x06
 540:	83 81       	ldd	r24, Z+3	; 0x03
 542:	81 ff       	sbrs	r24, 1
 544:	cc c1       	rjmp	.+920    	; 0x8de <vfprintf+0x3b6>
 546:	ce 01       	movw	r24, r28
 548:	01 96       	adiw	r24, 0x01	; 1
 54a:	3c 01       	movw	r6, r24
 54c:	f6 01       	movw	r30, r12
 54e:	93 81       	ldd	r25, Z+3	; 0x03
 550:	f7 01       	movw	r30, r14
 552:	93 fd       	sbrc	r25, 3
 554:	85 91       	lpm	r24, Z+
 556:	93 ff       	sbrs	r25, 3
 558:	81 91       	ld	r24, Z+
 55a:	7f 01       	movw	r14, r30
 55c:	88 23       	and	r24, r24
 55e:	09 f4       	brne	.+2      	; 0x562 <vfprintf+0x3a>
 560:	ba c1       	rjmp	.+884    	; 0x8d6 <vfprintf+0x3ae>
 562:	85 32       	cpi	r24, 0x25	; 37
 564:	39 f4       	brne	.+14     	; 0x574 <vfprintf+0x4c>
 566:	93 fd       	sbrc	r25, 3
 568:	85 91       	lpm	r24, Z+
 56a:	93 ff       	sbrs	r25, 3
 56c:	81 91       	ld	r24, Z+
 56e:	7f 01       	movw	r14, r30
 570:	85 32       	cpi	r24, 0x25	; 37
 572:	29 f4       	brne	.+10     	; 0x57e <vfprintf+0x56>
 574:	b6 01       	movw	r22, r12
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 57c:	e7 cf       	rjmp	.-50     	; 0x54c <vfprintf+0x24>
 57e:	91 2c       	mov	r9, r1
 580:	21 2c       	mov	r2, r1
 582:	31 2c       	mov	r3, r1
 584:	ff e1       	ldi	r31, 0x1F	; 31
 586:	f3 15       	cp	r31, r3
 588:	d8 f0       	brcs	.+54     	; 0x5c0 <vfprintf+0x98>
 58a:	8b 32       	cpi	r24, 0x2B	; 43
 58c:	79 f0       	breq	.+30     	; 0x5ac <vfprintf+0x84>
 58e:	38 f4       	brcc	.+14     	; 0x59e <vfprintf+0x76>
 590:	80 32       	cpi	r24, 0x20	; 32
 592:	79 f0       	breq	.+30     	; 0x5b2 <vfprintf+0x8a>
 594:	83 32       	cpi	r24, 0x23	; 35
 596:	a1 f4       	brne	.+40     	; 0x5c0 <vfprintf+0x98>
 598:	23 2d       	mov	r18, r3
 59a:	20 61       	ori	r18, 0x10	; 16
 59c:	1d c0       	rjmp	.+58     	; 0x5d8 <vfprintf+0xb0>
 59e:	8d 32       	cpi	r24, 0x2D	; 45
 5a0:	61 f0       	breq	.+24     	; 0x5ba <vfprintf+0x92>
 5a2:	80 33       	cpi	r24, 0x30	; 48
 5a4:	69 f4       	brne	.+26     	; 0x5c0 <vfprintf+0x98>
 5a6:	23 2d       	mov	r18, r3
 5a8:	21 60       	ori	r18, 0x01	; 1
 5aa:	16 c0       	rjmp	.+44     	; 0x5d8 <vfprintf+0xb0>
 5ac:	83 2d       	mov	r24, r3
 5ae:	82 60       	ori	r24, 0x02	; 2
 5b0:	38 2e       	mov	r3, r24
 5b2:	e3 2d       	mov	r30, r3
 5b4:	e4 60       	ori	r30, 0x04	; 4
 5b6:	3e 2e       	mov	r3, r30
 5b8:	2a c0       	rjmp	.+84     	; 0x60e <vfprintf+0xe6>
 5ba:	f3 2d       	mov	r31, r3
 5bc:	f8 60       	ori	r31, 0x08	; 8
 5be:	1d c0       	rjmp	.+58     	; 0x5fa <vfprintf+0xd2>
 5c0:	37 fc       	sbrc	r3, 7
 5c2:	2d c0       	rjmp	.+90     	; 0x61e <vfprintf+0xf6>
 5c4:	20 ed       	ldi	r18, 0xD0	; 208
 5c6:	28 0f       	add	r18, r24
 5c8:	2a 30       	cpi	r18, 0x0A	; 10
 5ca:	40 f0       	brcs	.+16     	; 0x5dc <vfprintf+0xb4>
 5cc:	8e 32       	cpi	r24, 0x2E	; 46
 5ce:	b9 f4       	brne	.+46     	; 0x5fe <vfprintf+0xd6>
 5d0:	36 fc       	sbrc	r3, 6
 5d2:	81 c1       	rjmp	.+770    	; 0x8d6 <vfprintf+0x3ae>
 5d4:	23 2d       	mov	r18, r3
 5d6:	20 64       	ori	r18, 0x40	; 64
 5d8:	32 2e       	mov	r3, r18
 5da:	19 c0       	rjmp	.+50     	; 0x60e <vfprintf+0xe6>
 5dc:	36 fe       	sbrs	r3, 6
 5de:	06 c0       	rjmp	.+12     	; 0x5ec <vfprintf+0xc4>
 5e0:	8a e0       	ldi	r24, 0x0A	; 10
 5e2:	98 9e       	mul	r9, r24
 5e4:	20 0d       	add	r18, r0
 5e6:	11 24       	eor	r1, r1
 5e8:	92 2e       	mov	r9, r18
 5ea:	11 c0       	rjmp	.+34     	; 0x60e <vfprintf+0xe6>
 5ec:	ea e0       	ldi	r30, 0x0A	; 10
 5ee:	2e 9e       	mul	r2, r30
 5f0:	20 0d       	add	r18, r0
 5f2:	11 24       	eor	r1, r1
 5f4:	22 2e       	mov	r2, r18
 5f6:	f3 2d       	mov	r31, r3
 5f8:	f0 62       	ori	r31, 0x20	; 32
 5fa:	3f 2e       	mov	r3, r31
 5fc:	08 c0       	rjmp	.+16     	; 0x60e <vfprintf+0xe6>
 5fe:	8c 36       	cpi	r24, 0x6C	; 108
 600:	21 f4       	brne	.+8      	; 0x60a <vfprintf+0xe2>
 602:	83 2d       	mov	r24, r3
 604:	80 68       	ori	r24, 0x80	; 128
 606:	38 2e       	mov	r3, r24
 608:	02 c0       	rjmp	.+4      	; 0x60e <vfprintf+0xe6>
 60a:	88 36       	cpi	r24, 0x68	; 104
 60c:	41 f4       	brne	.+16     	; 0x61e <vfprintf+0xf6>
 60e:	f7 01       	movw	r30, r14
 610:	93 fd       	sbrc	r25, 3
 612:	85 91       	lpm	r24, Z+
 614:	93 ff       	sbrs	r25, 3
 616:	81 91       	ld	r24, Z+
 618:	7f 01       	movw	r14, r30
 61a:	81 11       	cpse	r24, r1
 61c:	b3 cf       	rjmp	.-154    	; 0x584 <vfprintf+0x5c>
 61e:	98 2f       	mov	r25, r24
 620:	9f 7d       	andi	r25, 0xDF	; 223
 622:	95 54       	subi	r25, 0x45	; 69
 624:	93 30       	cpi	r25, 0x03	; 3
 626:	28 f4       	brcc	.+10     	; 0x632 <vfprintf+0x10a>
 628:	0c 5f       	subi	r16, 0xFC	; 252
 62a:	1f 4f       	sbci	r17, 0xFF	; 255
 62c:	9f e3       	ldi	r25, 0x3F	; 63
 62e:	99 83       	std	Y+1, r25	; 0x01
 630:	0d c0       	rjmp	.+26     	; 0x64c <vfprintf+0x124>
 632:	83 36       	cpi	r24, 0x63	; 99
 634:	31 f0       	breq	.+12     	; 0x642 <vfprintf+0x11a>
 636:	83 37       	cpi	r24, 0x73	; 115
 638:	71 f0       	breq	.+28     	; 0x656 <vfprintf+0x12e>
 63a:	83 35       	cpi	r24, 0x53	; 83
 63c:	09 f0       	breq	.+2      	; 0x640 <vfprintf+0x118>
 63e:	59 c0       	rjmp	.+178    	; 0x6f2 <vfprintf+0x1ca>
 640:	21 c0       	rjmp	.+66     	; 0x684 <vfprintf+0x15c>
 642:	f8 01       	movw	r30, r16
 644:	80 81       	ld	r24, Z
 646:	89 83       	std	Y+1, r24	; 0x01
 648:	0e 5f       	subi	r16, 0xFE	; 254
 64a:	1f 4f       	sbci	r17, 0xFF	; 255
 64c:	88 24       	eor	r8, r8
 64e:	83 94       	inc	r8
 650:	91 2c       	mov	r9, r1
 652:	53 01       	movw	r10, r6
 654:	13 c0       	rjmp	.+38     	; 0x67c <vfprintf+0x154>
 656:	28 01       	movw	r4, r16
 658:	f2 e0       	ldi	r31, 0x02	; 2
 65a:	4f 0e       	add	r4, r31
 65c:	51 1c       	adc	r5, r1
 65e:	f8 01       	movw	r30, r16
 660:	a0 80       	ld	r10, Z
 662:	b1 80       	ldd	r11, Z+1	; 0x01
 664:	36 fe       	sbrs	r3, 6
 666:	03 c0       	rjmp	.+6      	; 0x66e <vfprintf+0x146>
 668:	69 2d       	mov	r22, r9
 66a:	70 e0       	ldi	r23, 0x00	; 0
 66c:	02 c0       	rjmp	.+4      	; 0x672 <vfprintf+0x14a>
 66e:	6f ef       	ldi	r22, 0xFF	; 255
 670:	7f ef       	ldi	r23, 0xFF	; 255
 672:	c5 01       	movw	r24, r10
 674:	0e 94 80 04 	call	0x900	; 0x900 <strnlen>
 678:	4c 01       	movw	r8, r24
 67a:	82 01       	movw	r16, r4
 67c:	f3 2d       	mov	r31, r3
 67e:	ff 77       	andi	r31, 0x7F	; 127
 680:	3f 2e       	mov	r3, r31
 682:	16 c0       	rjmp	.+44     	; 0x6b0 <vfprintf+0x188>
 684:	28 01       	movw	r4, r16
 686:	22 e0       	ldi	r18, 0x02	; 2
 688:	42 0e       	add	r4, r18
 68a:	51 1c       	adc	r5, r1
 68c:	f8 01       	movw	r30, r16
 68e:	a0 80       	ld	r10, Z
 690:	b1 80       	ldd	r11, Z+1	; 0x01
 692:	36 fe       	sbrs	r3, 6
 694:	03 c0       	rjmp	.+6      	; 0x69c <vfprintf+0x174>
 696:	69 2d       	mov	r22, r9
 698:	70 e0       	ldi	r23, 0x00	; 0
 69a:	02 c0       	rjmp	.+4      	; 0x6a0 <vfprintf+0x178>
 69c:	6f ef       	ldi	r22, 0xFF	; 255
 69e:	7f ef       	ldi	r23, 0xFF	; 255
 6a0:	c5 01       	movw	r24, r10
 6a2:	0e 94 75 04 	call	0x8ea	; 0x8ea <strnlen_P>
 6a6:	4c 01       	movw	r8, r24
 6a8:	f3 2d       	mov	r31, r3
 6aa:	f0 68       	ori	r31, 0x80	; 128
 6ac:	3f 2e       	mov	r3, r31
 6ae:	82 01       	movw	r16, r4
 6b0:	33 fc       	sbrc	r3, 3
 6b2:	1b c0       	rjmp	.+54     	; 0x6ea <vfprintf+0x1c2>
 6b4:	82 2d       	mov	r24, r2
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	88 16       	cp	r8, r24
 6ba:	99 06       	cpc	r9, r25
 6bc:	b0 f4       	brcc	.+44     	; 0x6ea <vfprintf+0x1c2>
 6be:	b6 01       	movw	r22, r12
 6c0:	80 e2       	ldi	r24, 0x20	; 32
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 6c8:	2a 94       	dec	r2
 6ca:	f4 cf       	rjmp	.-24     	; 0x6b4 <vfprintf+0x18c>
 6cc:	f5 01       	movw	r30, r10
 6ce:	37 fc       	sbrc	r3, 7
 6d0:	85 91       	lpm	r24, Z+
 6d2:	37 fe       	sbrs	r3, 7
 6d4:	81 91       	ld	r24, Z+
 6d6:	5f 01       	movw	r10, r30
 6d8:	b6 01       	movw	r22, r12
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 6e0:	21 10       	cpse	r2, r1
 6e2:	2a 94       	dec	r2
 6e4:	21 e0       	ldi	r18, 0x01	; 1
 6e6:	82 1a       	sub	r8, r18
 6e8:	91 08       	sbc	r9, r1
 6ea:	81 14       	cp	r8, r1
 6ec:	91 04       	cpc	r9, r1
 6ee:	71 f7       	brne	.-36     	; 0x6cc <vfprintf+0x1a4>
 6f0:	e8 c0       	rjmp	.+464    	; 0x8c2 <vfprintf+0x39a>
 6f2:	84 36       	cpi	r24, 0x64	; 100
 6f4:	11 f0       	breq	.+4      	; 0x6fa <vfprintf+0x1d2>
 6f6:	89 36       	cpi	r24, 0x69	; 105
 6f8:	41 f5       	brne	.+80     	; 0x74a <vfprintf+0x222>
 6fa:	f8 01       	movw	r30, r16
 6fc:	37 fe       	sbrs	r3, 7
 6fe:	07 c0       	rjmp	.+14     	; 0x70e <vfprintf+0x1e6>
 700:	60 81       	ld	r22, Z
 702:	71 81       	ldd	r23, Z+1	; 0x01
 704:	82 81       	ldd	r24, Z+2	; 0x02
 706:	93 81       	ldd	r25, Z+3	; 0x03
 708:	0c 5f       	subi	r16, 0xFC	; 252
 70a:	1f 4f       	sbci	r17, 0xFF	; 255
 70c:	08 c0       	rjmp	.+16     	; 0x71e <vfprintf+0x1f6>
 70e:	60 81       	ld	r22, Z
 710:	71 81       	ldd	r23, Z+1	; 0x01
 712:	07 2e       	mov	r0, r23
 714:	00 0c       	add	r0, r0
 716:	88 0b       	sbc	r24, r24
 718:	99 0b       	sbc	r25, r25
 71a:	0e 5f       	subi	r16, 0xFE	; 254
 71c:	1f 4f       	sbci	r17, 0xFF	; 255
 71e:	f3 2d       	mov	r31, r3
 720:	ff 76       	andi	r31, 0x6F	; 111
 722:	3f 2e       	mov	r3, r31
 724:	97 ff       	sbrs	r25, 7
 726:	09 c0       	rjmp	.+18     	; 0x73a <vfprintf+0x212>
 728:	90 95       	com	r25
 72a:	80 95       	com	r24
 72c:	70 95       	com	r23
 72e:	61 95       	neg	r22
 730:	7f 4f       	sbci	r23, 0xFF	; 255
 732:	8f 4f       	sbci	r24, 0xFF	; 255
 734:	9f 4f       	sbci	r25, 0xFF	; 255
 736:	f0 68       	ori	r31, 0x80	; 128
 738:	3f 2e       	mov	r3, r31
 73a:	2a e0       	ldi	r18, 0x0A	; 10
 73c:	30 e0       	ldi	r19, 0x00	; 0
 73e:	a3 01       	movw	r20, r6
 740:	0e 94 c7 04 	call	0x98e	; 0x98e <__ultoa_invert>
 744:	88 2e       	mov	r8, r24
 746:	86 18       	sub	r8, r6
 748:	45 c0       	rjmp	.+138    	; 0x7d4 <vfprintf+0x2ac>
 74a:	85 37       	cpi	r24, 0x75	; 117
 74c:	31 f4       	brne	.+12     	; 0x75a <vfprintf+0x232>
 74e:	23 2d       	mov	r18, r3
 750:	2f 7e       	andi	r18, 0xEF	; 239
 752:	b2 2e       	mov	r11, r18
 754:	2a e0       	ldi	r18, 0x0A	; 10
 756:	30 e0       	ldi	r19, 0x00	; 0
 758:	25 c0       	rjmp	.+74     	; 0x7a4 <vfprintf+0x27c>
 75a:	93 2d       	mov	r25, r3
 75c:	99 7f       	andi	r25, 0xF9	; 249
 75e:	b9 2e       	mov	r11, r25
 760:	8f 36       	cpi	r24, 0x6F	; 111
 762:	c1 f0       	breq	.+48     	; 0x794 <vfprintf+0x26c>
 764:	18 f4       	brcc	.+6      	; 0x76c <vfprintf+0x244>
 766:	88 35       	cpi	r24, 0x58	; 88
 768:	79 f0       	breq	.+30     	; 0x788 <vfprintf+0x260>
 76a:	b5 c0       	rjmp	.+362    	; 0x8d6 <vfprintf+0x3ae>
 76c:	80 37       	cpi	r24, 0x70	; 112
 76e:	19 f0       	breq	.+6      	; 0x776 <vfprintf+0x24e>
 770:	88 37       	cpi	r24, 0x78	; 120
 772:	21 f0       	breq	.+8      	; 0x77c <vfprintf+0x254>
 774:	b0 c0       	rjmp	.+352    	; 0x8d6 <vfprintf+0x3ae>
 776:	e9 2f       	mov	r30, r25
 778:	e0 61       	ori	r30, 0x10	; 16
 77a:	be 2e       	mov	r11, r30
 77c:	b4 fe       	sbrs	r11, 4
 77e:	0d c0       	rjmp	.+26     	; 0x79a <vfprintf+0x272>
 780:	fb 2d       	mov	r31, r11
 782:	f4 60       	ori	r31, 0x04	; 4
 784:	bf 2e       	mov	r11, r31
 786:	09 c0       	rjmp	.+18     	; 0x79a <vfprintf+0x272>
 788:	34 fe       	sbrs	r3, 4
 78a:	0a c0       	rjmp	.+20     	; 0x7a0 <vfprintf+0x278>
 78c:	29 2f       	mov	r18, r25
 78e:	26 60       	ori	r18, 0x06	; 6
 790:	b2 2e       	mov	r11, r18
 792:	06 c0       	rjmp	.+12     	; 0x7a0 <vfprintf+0x278>
 794:	28 e0       	ldi	r18, 0x08	; 8
 796:	30 e0       	ldi	r19, 0x00	; 0
 798:	05 c0       	rjmp	.+10     	; 0x7a4 <vfprintf+0x27c>
 79a:	20 e1       	ldi	r18, 0x10	; 16
 79c:	30 e0       	ldi	r19, 0x00	; 0
 79e:	02 c0       	rjmp	.+4      	; 0x7a4 <vfprintf+0x27c>
 7a0:	20 e1       	ldi	r18, 0x10	; 16
 7a2:	32 e0       	ldi	r19, 0x02	; 2
 7a4:	f8 01       	movw	r30, r16
 7a6:	b7 fe       	sbrs	r11, 7
 7a8:	07 c0       	rjmp	.+14     	; 0x7b8 <vfprintf+0x290>
 7aa:	60 81       	ld	r22, Z
 7ac:	71 81       	ldd	r23, Z+1	; 0x01
 7ae:	82 81       	ldd	r24, Z+2	; 0x02
 7b0:	93 81       	ldd	r25, Z+3	; 0x03
 7b2:	0c 5f       	subi	r16, 0xFC	; 252
 7b4:	1f 4f       	sbci	r17, 0xFF	; 255
 7b6:	06 c0       	rjmp	.+12     	; 0x7c4 <vfprintf+0x29c>
 7b8:	60 81       	ld	r22, Z
 7ba:	71 81       	ldd	r23, Z+1	; 0x01
 7bc:	80 e0       	ldi	r24, 0x00	; 0
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	0e 5f       	subi	r16, 0xFE	; 254
 7c2:	1f 4f       	sbci	r17, 0xFF	; 255
 7c4:	a3 01       	movw	r20, r6
 7c6:	0e 94 c7 04 	call	0x98e	; 0x98e <__ultoa_invert>
 7ca:	88 2e       	mov	r8, r24
 7cc:	86 18       	sub	r8, r6
 7ce:	fb 2d       	mov	r31, r11
 7d0:	ff 77       	andi	r31, 0x7F	; 127
 7d2:	3f 2e       	mov	r3, r31
 7d4:	36 fe       	sbrs	r3, 6
 7d6:	0d c0       	rjmp	.+26     	; 0x7f2 <vfprintf+0x2ca>
 7d8:	23 2d       	mov	r18, r3
 7da:	2e 7f       	andi	r18, 0xFE	; 254
 7dc:	a2 2e       	mov	r10, r18
 7de:	89 14       	cp	r8, r9
 7e0:	58 f4       	brcc	.+22     	; 0x7f8 <vfprintf+0x2d0>
 7e2:	34 fe       	sbrs	r3, 4
 7e4:	0b c0       	rjmp	.+22     	; 0x7fc <vfprintf+0x2d4>
 7e6:	32 fc       	sbrc	r3, 2
 7e8:	09 c0       	rjmp	.+18     	; 0x7fc <vfprintf+0x2d4>
 7ea:	83 2d       	mov	r24, r3
 7ec:	8e 7e       	andi	r24, 0xEE	; 238
 7ee:	a8 2e       	mov	r10, r24
 7f0:	05 c0       	rjmp	.+10     	; 0x7fc <vfprintf+0x2d4>
 7f2:	b8 2c       	mov	r11, r8
 7f4:	a3 2c       	mov	r10, r3
 7f6:	03 c0       	rjmp	.+6      	; 0x7fe <vfprintf+0x2d6>
 7f8:	b8 2c       	mov	r11, r8
 7fa:	01 c0       	rjmp	.+2      	; 0x7fe <vfprintf+0x2d6>
 7fc:	b9 2c       	mov	r11, r9
 7fe:	a4 fe       	sbrs	r10, 4
 800:	0f c0       	rjmp	.+30     	; 0x820 <vfprintf+0x2f8>
 802:	fe 01       	movw	r30, r28
 804:	e8 0d       	add	r30, r8
 806:	f1 1d       	adc	r31, r1
 808:	80 81       	ld	r24, Z
 80a:	80 33       	cpi	r24, 0x30	; 48
 80c:	21 f4       	brne	.+8      	; 0x816 <vfprintf+0x2ee>
 80e:	9a 2d       	mov	r25, r10
 810:	99 7e       	andi	r25, 0xE9	; 233
 812:	a9 2e       	mov	r10, r25
 814:	09 c0       	rjmp	.+18     	; 0x828 <vfprintf+0x300>
 816:	a2 fe       	sbrs	r10, 2
 818:	06 c0       	rjmp	.+12     	; 0x826 <vfprintf+0x2fe>
 81a:	b3 94       	inc	r11
 81c:	b3 94       	inc	r11
 81e:	04 c0       	rjmp	.+8      	; 0x828 <vfprintf+0x300>
 820:	8a 2d       	mov	r24, r10
 822:	86 78       	andi	r24, 0x86	; 134
 824:	09 f0       	breq	.+2      	; 0x828 <vfprintf+0x300>
 826:	b3 94       	inc	r11
 828:	a3 fc       	sbrc	r10, 3
 82a:	11 c0       	rjmp	.+34     	; 0x84e <vfprintf+0x326>
 82c:	a0 fe       	sbrs	r10, 0
 82e:	06 c0       	rjmp	.+12     	; 0x83c <vfprintf+0x314>
 830:	b2 14       	cp	r11, r2
 832:	88 f4       	brcc	.+34     	; 0x856 <vfprintf+0x32e>
 834:	28 0c       	add	r2, r8
 836:	92 2c       	mov	r9, r2
 838:	9b 18       	sub	r9, r11
 83a:	0e c0       	rjmp	.+28     	; 0x858 <vfprintf+0x330>
 83c:	b2 14       	cp	r11, r2
 83e:	60 f4       	brcc	.+24     	; 0x858 <vfprintf+0x330>
 840:	b6 01       	movw	r22, r12
 842:	80 e2       	ldi	r24, 0x20	; 32
 844:	90 e0       	ldi	r25, 0x00	; 0
 846:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 84a:	b3 94       	inc	r11
 84c:	f7 cf       	rjmp	.-18     	; 0x83c <vfprintf+0x314>
 84e:	b2 14       	cp	r11, r2
 850:	18 f4       	brcc	.+6      	; 0x858 <vfprintf+0x330>
 852:	2b 18       	sub	r2, r11
 854:	02 c0       	rjmp	.+4      	; 0x85a <vfprintf+0x332>
 856:	98 2c       	mov	r9, r8
 858:	21 2c       	mov	r2, r1
 85a:	a4 fe       	sbrs	r10, 4
 85c:	10 c0       	rjmp	.+32     	; 0x87e <vfprintf+0x356>
 85e:	b6 01       	movw	r22, r12
 860:	80 e3       	ldi	r24, 0x30	; 48
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 868:	a2 fe       	sbrs	r10, 2
 86a:	17 c0       	rjmp	.+46     	; 0x89a <vfprintf+0x372>
 86c:	a1 fc       	sbrc	r10, 1
 86e:	03 c0       	rjmp	.+6      	; 0x876 <vfprintf+0x34e>
 870:	88 e7       	ldi	r24, 0x78	; 120
 872:	90 e0       	ldi	r25, 0x00	; 0
 874:	02 c0       	rjmp	.+4      	; 0x87a <vfprintf+0x352>
 876:	88 e5       	ldi	r24, 0x58	; 88
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	b6 01       	movw	r22, r12
 87c:	0c c0       	rjmp	.+24     	; 0x896 <vfprintf+0x36e>
 87e:	8a 2d       	mov	r24, r10
 880:	86 78       	andi	r24, 0x86	; 134
 882:	59 f0       	breq	.+22     	; 0x89a <vfprintf+0x372>
 884:	a1 fe       	sbrs	r10, 1
 886:	02 c0       	rjmp	.+4      	; 0x88c <vfprintf+0x364>
 888:	8b e2       	ldi	r24, 0x2B	; 43
 88a:	01 c0       	rjmp	.+2      	; 0x88e <vfprintf+0x366>
 88c:	80 e2       	ldi	r24, 0x20	; 32
 88e:	a7 fc       	sbrc	r10, 7
 890:	8d e2       	ldi	r24, 0x2D	; 45
 892:	b6 01       	movw	r22, r12
 894:	90 e0       	ldi	r25, 0x00	; 0
 896:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 89a:	89 14       	cp	r8, r9
 89c:	38 f4       	brcc	.+14     	; 0x8ac <vfprintf+0x384>
 89e:	b6 01       	movw	r22, r12
 8a0:	80 e3       	ldi	r24, 0x30	; 48
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 8a8:	9a 94       	dec	r9
 8aa:	f7 cf       	rjmp	.-18     	; 0x89a <vfprintf+0x372>
 8ac:	8a 94       	dec	r8
 8ae:	f3 01       	movw	r30, r6
 8b0:	e8 0d       	add	r30, r8
 8b2:	f1 1d       	adc	r31, r1
 8b4:	80 81       	ld	r24, Z
 8b6:	b6 01       	movw	r22, r12
 8b8:	90 e0       	ldi	r25, 0x00	; 0
 8ba:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 8be:	81 10       	cpse	r8, r1
 8c0:	f5 cf       	rjmp	.-22     	; 0x8ac <vfprintf+0x384>
 8c2:	22 20       	and	r2, r2
 8c4:	09 f4       	brne	.+2      	; 0x8c8 <vfprintf+0x3a0>
 8c6:	42 ce       	rjmp	.-892    	; 0x54c <vfprintf+0x24>
 8c8:	b6 01       	movw	r22, r12
 8ca:	80 e2       	ldi	r24, 0x20	; 32
 8cc:	90 e0       	ldi	r25, 0x00	; 0
 8ce:	0e 94 8b 04 	call	0x916	; 0x916 <fputc>
 8d2:	2a 94       	dec	r2
 8d4:	f6 cf       	rjmp	.-20     	; 0x8c2 <vfprintf+0x39a>
 8d6:	f6 01       	movw	r30, r12
 8d8:	86 81       	ldd	r24, Z+6	; 0x06
 8da:	97 81       	ldd	r25, Z+7	; 0x07
 8dc:	02 c0       	rjmp	.+4      	; 0x8e2 <vfprintf+0x3ba>
 8de:	8f ef       	ldi	r24, 0xFF	; 255
 8e0:	9f ef       	ldi	r25, 0xFF	; 255
 8e2:	2b 96       	adiw	r28, 0x0b	; 11
 8e4:	e2 e1       	ldi	r30, 0x12	; 18
 8e6:	0c 94 41 05 	jmp	0xa82	; 0xa82 <__epilogue_restores__>

000008ea <strnlen_P>:
 8ea:	fc 01       	movw	r30, r24
 8ec:	05 90       	lpm	r0, Z+
 8ee:	61 50       	subi	r22, 0x01	; 1
 8f0:	70 40       	sbci	r23, 0x00	; 0
 8f2:	01 10       	cpse	r0, r1
 8f4:	d8 f7       	brcc	.-10     	; 0x8ec <strnlen_P+0x2>
 8f6:	80 95       	com	r24
 8f8:	90 95       	com	r25
 8fa:	8e 0f       	add	r24, r30
 8fc:	9f 1f       	adc	r25, r31
 8fe:	08 95       	ret

00000900 <strnlen>:
 900:	fc 01       	movw	r30, r24
 902:	61 50       	subi	r22, 0x01	; 1
 904:	70 40       	sbci	r23, 0x00	; 0
 906:	01 90       	ld	r0, Z+
 908:	01 10       	cpse	r0, r1
 90a:	d8 f7       	brcc	.-10     	; 0x902 <strnlen+0x2>
 90c:	80 95       	com	r24
 90e:	90 95       	com	r25
 910:	8e 0f       	add	r24, r30
 912:	9f 1f       	adc	r25, r31
 914:	08 95       	ret

00000916 <fputc>:
 916:	0f 93       	push	r16
 918:	1f 93       	push	r17
 91a:	cf 93       	push	r28
 91c:	df 93       	push	r29
 91e:	fb 01       	movw	r30, r22
 920:	23 81       	ldd	r18, Z+3	; 0x03
 922:	21 fd       	sbrc	r18, 1
 924:	03 c0       	rjmp	.+6      	; 0x92c <fputc+0x16>
 926:	8f ef       	ldi	r24, 0xFF	; 255
 928:	9f ef       	ldi	r25, 0xFF	; 255
 92a:	2c c0       	rjmp	.+88     	; 0x984 <fputc+0x6e>
 92c:	22 ff       	sbrs	r18, 2
 92e:	16 c0       	rjmp	.+44     	; 0x95c <fputc+0x46>
 930:	46 81       	ldd	r20, Z+6	; 0x06
 932:	57 81       	ldd	r21, Z+7	; 0x07
 934:	24 81       	ldd	r18, Z+4	; 0x04
 936:	35 81       	ldd	r19, Z+5	; 0x05
 938:	42 17       	cp	r20, r18
 93a:	53 07       	cpc	r21, r19
 93c:	44 f4       	brge	.+16     	; 0x94e <fputc+0x38>
 93e:	a0 81       	ld	r26, Z
 940:	b1 81       	ldd	r27, Z+1	; 0x01
 942:	9d 01       	movw	r18, r26
 944:	2f 5f       	subi	r18, 0xFF	; 255
 946:	3f 4f       	sbci	r19, 0xFF	; 255
 948:	31 83       	std	Z+1, r19	; 0x01
 94a:	20 83       	st	Z, r18
 94c:	8c 93       	st	X, r24
 94e:	26 81       	ldd	r18, Z+6	; 0x06
 950:	37 81       	ldd	r19, Z+7	; 0x07
 952:	2f 5f       	subi	r18, 0xFF	; 255
 954:	3f 4f       	sbci	r19, 0xFF	; 255
 956:	37 83       	std	Z+7, r19	; 0x07
 958:	26 83       	std	Z+6, r18	; 0x06
 95a:	14 c0       	rjmp	.+40     	; 0x984 <fputc+0x6e>
 95c:	8b 01       	movw	r16, r22
 95e:	ec 01       	movw	r28, r24
 960:	fb 01       	movw	r30, r22
 962:	00 84       	ldd	r0, Z+8	; 0x08
 964:	f1 85       	ldd	r31, Z+9	; 0x09
 966:	e0 2d       	mov	r30, r0
 968:	09 95       	icall
 96a:	89 2b       	or	r24, r25
 96c:	e1 f6       	brne	.-72     	; 0x926 <fputc+0x10>
 96e:	d8 01       	movw	r26, r16
 970:	16 96       	adiw	r26, 0x06	; 6
 972:	8d 91       	ld	r24, X+
 974:	9c 91       	ld	r25, X
 976:	17 97       	sbiw	r26, 0x07	; 7
 978:	01 96       	adiw	r24, 0x01	; 1
 97a:	17 96       	adiw	r26, 0x07	; 7
 97c:	9c 93       	st	X, r25
 97e:	8e 93       	st	-X, r24
 980:	16 97       	sbiw	r26, 0x06	; 6
 982:	ce 01       	movw	r24, r28
 984:	df 91       	pop	r29
 986:	cf 91       	pop	r28
 988:	1f 91       	pop	r17
 98a:	0f 91       	pop	r16
 98c:	08 95       	ret

0000098e <__ultoa_invert>:
 98e:	fa 01       	movw	r30, r20
 990:	aa 27       	eor	r26, r26
 992:	28 30       	cpi	r18, 0x08	; 8
 994:	51 f1       	breq	.+84     	; 0x9ea <__ultoa_invert+0x5c>
 996:	20 31       	cpi	r18, 0x10	; 16
 998:	81 f1       	breq	.+96     	; 0x9fa <__ultoa_invert+0x6c>
 99a:	e8 94       	clt
 99c:	6f 93       	push	r22
 99e:	6e 7f       	andi	r22, 0xFE	; 254
 9a0:	6e 5f       	subi	r22, 0xFE	; 254
 9a2:	7f 4f       	sbci	r23, 0xFF	; 255
 9a4:	8f 4f       	sbci	r24, 0xFF	; 255
 9a6:	9f 4f       	sbci	r25, 0xFF	; 255
 9a8:	af 4f       	sbci	r26, 0xFF	; 255
 9aa:	b1 e0       	ldi	r27, 0x01	; 1
 9ac:	3e d0       	rcall	.+124    	; 0xa2a <__ultoa_invert+0x9c>
 9ae:	b4 e0       	ldi	r27, 0x04	; 4
 9b0:	3c d0       	rcall	.+120    	; 0xa2a <__ultoa_invert+0x9c>
 9b2:	67 0f       	add	r22, r23
 9b4:	78 1f       	adc	r23, r24
 9b6:	89 1f       	adc	r24, r25
 9b8:	9a 1f       	adc	r25, r26
 9ba:	a1 1d       	adc	r26, r1
 9bc:	68 0f       	add	r22, r24
 9be:	79 1f       	adc	r23, r25
 9c0:	8a 1f       	adc	r24, r26
 9c2:	91 1d       	adc	r25, r1
 9c4:	a1 1d       	adc	r26, r1
 9c6:	6a 0f       	add	r22, r26
 9c8:	71 1d       	adc	r23, r1
 9ca:	81 1d       	adc	r24, r1
 9cc:	91 1d       	adc	r25, r1
 9ce:	a1 1d       	adc	r26, r1
 9d0:	20 d0       	rcall	.+64     	; 0xa12 <__ultoa_invert+0x84>
 9d2:	09 f4       	brne	.+2      	; 0x9d6 <__ultoa_invert+0x48>
 9d4:	68 94       	set
 9d6:	3f 91       	pop	r19
 9d8:	2a e0       	ldi	r18, 0x0A	; 10
 9da:	26 9f       	mul	r18, r22
 9dc:	11 24       	eor	r1, r1
 9de:	30 19       	sub	r19, r0
 9e0:	30 5d       	subi	r19, 0xD0	; 208
 9e2:	31 93       	st	Z+, r19
 9e4:	de f6       	brtc	.-74     	; 0x99c <__ultoa_invert+0xe>
 9e6:	cf 01       	movw	r24, r30
 9e8:	08 95       	ret
 9ea:	46 2f       	mov	r20, r22
 9ec:	47 70       	andi	r20, 0x07	; 7
 9ee:	40 5d       	subi	r20, 0xD0	; 208
 9f0:	41 93       	st	Z+, r20
 9f2:	b3 e0       	ldi	r27, 0x03	; 3
 9f4:	0f d0       	rcall	.+30     	; 0xa14 <__ultoa_invert+0x86>
 9f6:	c9 f7       	brne	.-14     	; 0x9ea <__ultoa_invert+0x5c>
 9f8:	f6 cf       	rjmp	.-20     	; 0x9e6 <__ultoa_invert+0x58>
 9fa:	46 2f       	mov	r20, r22
 9fc:	4f 70       	andi	r20, 0x0F	; 15
 9fe:	40 5d       	subi	r20, 0xD0	; 208
 a00:	4a 33       	cpi	r20, 0x3A	; 58
 a02:	18 f0       	brcs	.+6      	; 0xa0a <__ultoa_invert+0x7c>
 a04:	49 5d       	subi	r20, 0xD9	; 217
 a06:	31 fd       	sbrc	r19, 1
 a08:	40 52       	subi	r20, 0x20	; 32
 a0a:	41 93       	st	Z+, r20
 a0c:	02 d0       	rcall	.+4      	; 0xa12 <__ultoa_invert+0x84>
 a0e:	a9 f7       	brne	.-22     	; 0x9fa <__ultoa_invert+0x6c>
 a10:	ea cf       	rjmp	.-44     	; 0x9e6 <__ultoa_invert+0x58>
 a12:	b4 e0       	ldi	r27, 0x04	; 4
 a14:	a6 95       	lsr	r26
 a16:	97 95       	ror	r25
 a18:	87 95       	ror	r24
 a1a:	77 95       	ror	r23
 a1c:	67 95       	ror	r22
 a1e:	ba 95       	dec	r27
 a20:	c9 f7       	brne	.-14     	; 0xa14 <__ultoa_invert+0x86>
 a22:	00 97       	sbiw	r24, 0x00	; 0
 a24:	61 05       	cpc	r22, r1
 a26:	71 05       	cpc	r23, r1
 a28:	08 95       	ret
 a2a:	9b 01       	movw	r18, r22
 a2c:	ac 01       	movw	r20, r24
 a2e:	0a 2e       	mov	r0, r26
 a30:	06 94       	lsr	r0
 a32:	57 95       	ror	r21
 a34:	47 95       	ror	r20
 a36:	37 95       	ror	r19
 a38:	27 95       	ror	r18
 a3a:	ba 95       	dec	r27
 a3c:	c9 f7       	brne	.-14     	; 0xa30 <__ultoa_invert+0xa2>
 a3e:	62 0f       	add	r22, r18
 a40:	73 1f       	adc	r23, r19
 a42:	84 1f       	adc	r24, r20
 a44:	95 1f       	adc	r25, r21
 a46:	a0 1d       	adc	r26, r0
 a48:	08 95       	ret

00000a4a <__prologue_saves__>:
 a4a:	2f 92       	push	r2
 a4c:	3f 92       	push	r3
 a4e:	4f 92       	push	r4
 a50:	5f 92       	push	r5
 a52:	6f 92       	push	r6
 a54:	7f 92       	push	r7
 a56:	8f 92       	push	r8
 a58:	9f 92       	push	r9
 a5a:	af 92       	push	r10
 a5c:	bf 92       	push	r11
 a5e:	cf 92       	push	r12
 a60:	df 92       	push	r13
 a62:	ef 92       	push	r14
 a64:	ff 92       	push	r15
 a66:	0f 93       	push	r16
 a68:	1f 93       	push	r17
 a6a:	cf 93       	push	r28
 a6c:	df 93       	push	r29
 a6e:	cd b7       	in	r28, 0x3d	; 61
 a70:	de b7       	in	r29, 0x3e	; 62
 a72:	ca 1b       	sub	r28, r26
 a74:	db 0b       	sbc	r29, r27
 a76:	0f b6       	in	r0, 0x3f	; 63
 a78:	f8 94       	cli
 a7a:	de bf       	out	0x3e, r29	; 62
 a7c:	0f be       	out	0x3f, r0	; 63
 a7e:	cd bf       	out	0x3d, r28	; 61
 a80:	09 94       	ijmp

00000a82 <__epilogue_restores__>:
 a82:	2a 88       	ldd	r2, Y+18	; 0x12
 a84:	39 88       	ldd	r3, Y+17	; 0x11
 a86:	48 88       	ldd	r4, Y+16	; 0x10
 a88:	5f 84       	ldd	r5, Y+15	; 0x0f
 a8a:	6e 84       	ldd	r6, Y+14	; 0x0e
 a8c:	7d 84       	ldd	r7, Y+13	; 0x0d
 a8e:	8c 84       	ldd	r8, Y+12	; 0x0c
 a90:	9b 84       	ldd	r9, Y+11	; 0x0b
 a92:	aa 84       	ldd	r10, Y+10	; 0x0a
 a94:	b9 84       	ldd	r11, Y+9	; 0x09
 a96:	c8 84       	ldd	r12, Y+8	; 0x08
 a98:	df 80       	ldd	r13, Y+7	; 0x07
 a9a:	ee 80       	ldd	r14, Y+6	; 0x06
 a9c:	fd 80       	ldd	r15, Y+5	; 0x05
 a9e:	0c 81       	ldd	r16, Y+4	; 0x04
 aa0:	1b 81       	ldd	r17, Y+3	; 0x03
 aa2:	aa 81       	ldd	r26, Y+2	; 0x02
 aa4:	b9 81       	ldd	r27, Y+1	; 0x01
 aa6:	ce 0f       	add	r28, r30
 aa8:	d1 1d       	adc	r29, r1
 aaa:	0f b6       	in	r0, 0x3f	; 63
 aac:	f8 94       	cli
 aae:	de bf       	out	0x3e, r29	; 62
 ab0:	0f be       	out	0x3f, r0	; 63
 ab2:	cd bf       	out	0x3d, r28	; 61
 ab4:	ed 01       	movw	r28, r26
 ab6:	08 95       	ret

00000ab8 <_exit>:
 ab8:	f8 94       	cli

00000aba <__stop_program>:
 aba:	ff cf       	rjmp	.-2      	; 0xaba <__stop_program>
